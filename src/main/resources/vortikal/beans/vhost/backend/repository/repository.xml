<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.0.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.0.xsd">
    
    <import resource="ibatis.xml" />
    <import resource="security.xml" />
    
    <bean id="resourceImpl" class="org.vortikal.repository.ResourceImpl" scope="prototype">
        <property name="resourceTypeTree" ref="resourceTypeTree" />
        <property name="authorizationManager" ref="authorizationManager" />
    </bean>
    
    <bean id="repository.sqlMapDao" parent="abstractSqlMapDao">
        <lookup-method name="createResourceImpl" bean="resourceImpl" />
    </bean>

	<bean id="repository.transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="repository.dataSource" />
	</bean>

	<tx:advice id="repository.txAdvice" transaction-manager="repository.transactionManager">
		<tx:attributes>
			<tx:method name="*"
				no-rollback-for="org.vortikal.repository.RepositoryException,org.vortikal.security.AuthenticationException" />
		</tx:attributes>
	</tx:advice>

	<aop:config>
		<aop:pointcut id="repository.repositoryOperationPointcut"
			expression="execution(* org.vortikal.repository.Repository.*(..))" />
		<aop:advisor advice-ref="repository.txAdvice"
			pointcut-ref="repository.repositoryOperationPointcut" />
	</aop:config>

	<aop:config>
		<aop:pointcut id="repository.sqlMapIndexDaoPointcut"
			expression="execution(* org.vortikal.repository.store.db.SqlMapIndexDao.*(..))" />
		<aop:advisor advice-ref="repository.txAdvice"
			pointcut-ref="repository.sqlMapIndexDaoPointcut" />
	</aop:config>

	<bean id="repository" class="org.vortikal.repository.RepositoryImpl"
		init-method="init" destroy-method="destroy">
		<property name="id" value="${repositoryID}" />
		<property name="tokenManager" ref="tokenManager" />
		<property name="authorizationManager" ref="authorizationManager" />
		<property name="dao" ref="${repositoryBackend}" />
		<property name="commentDAO" ref="${repository.commentDao}" />
		<property name="contentStore" ref="${repository.contentStore}" />
		<property name="lockManager" ref="repository.lockManager" />
		<property name="repositoryResourceHelper" ref="repositoryResourceHelper" />
		<property name="tempDir" value="${repository.tempDir}" />
	</bean>
	
	<bean id="repository.fsContentStore"
		class="org.vortikal.repository.store.fs.SimpleFileSystemContentStore">
		<property name="urlEncodeFileNames" value="${urlEncodeFileNames}" />
		<property name="repositoryDataDirectory" value="${repositoryDataDirectory}" />
	</bean>
	
	<bean id="repository.cache" class="org.vortikal.repository.store.Cache">
		<property name="maxItems" value="${resourceCacheSize}" />
		<property name="wrappedAccessor" ref="repository.sqlMapDao" />
	</bean>

	<bean id="repository.requestLocal" class="org.vortikal.web.RequestLocalRepository">
		<property name="repository" ref="repository" />
	</bean>
	
	<bean id="requestLocalRepositoryAware" abstract="true">
		<description>
		    Simple parent template for repository aware controllers. Just
		    saves a couple of lines for each controller having a repository
		    property, that's just about all of them
        </description>
		<property name="repository" ref="repository.requestLocal" />
	</bean>

	<bean id="contentRepresentationRegistry"
		class="org.vortikal.repository.content.ContentRepresentationRegistry" />

	<bean id="jdomContentFactory" class="org.vortikal.repository.content.JDOMContentFactory" />

	<bean id="jtidyContentFactory" class="org.vortikal.repository.content.JTidyContentFactory" />

	<bean id="bufferedImageContentFactory"
		class="org.vortikal.repository.content.BufferedImageContentFactory" />

	<bean id="audioFileContentFactory" class="org.vortikal.repository.content.AudioFileContentFactory" />

    <bean id="repository.binaryDao" class="org.vortikal.repository.store.db.SqlBinaryContentMapDataAccessor">
        <property name="sqlMapClient" ref="repository.sqlMapClient" />
        <property name="sqlMaps" ref="repository.statementMappings" />
    </bean>
    
    <!-- XXX: cyclic headache -->
    <bean id="repositoryResourceHelper" class="org.vortikal.repository.RepositoryResourceHelperImpl">
        <property name="authorizationManager" ref="authorizationManager" />
        <property name="resourceTypeTree" ref="resourceTypeTree" />
        <property name="contentStore" ref="${repository.contentStore}" />
        <property name="contentRepresentationRegistry" ref="contentRepresentationRegistry" />
    </bean>
    
    <!-- XXX: cyclic headache -->
    <bean id="authorizationManager" class="org.vortikal.repository.AuthorizationManagerImpl">
        <property name="readOnly" value="${repositoryReadOnly}" />
        <property name="principalManager" ref="principalManager" />
        <property name="lockManager" ref="repository.lockManager" />
        <property name="roleManager" ref="roleManager" />
        <property name="dao" ref="${repositoryBackend}" />
    </bean>
    
    <bean id="repository.lockManager" class="org.vortikal.repository.LockManager">
        <property name="dao" ref="${repositoryBackend}" />
    </bean>
	
	<bean id="repository.indexDao" class="org.vortikal.repository.store.db.SqlMapIndexDao">
        <property name="sqlMapClient" ref="repository.sqlMapClient" />
        <property name="sqlMaps" ref="repository.statementMappings" />
        <property name="resourceTypeTree" ref="resourceTypeTree" />
        <property name="principalFactory" ref="principalFactory" />    
        <property name="queryAuthorizationBatchSize" value="1000" />
        <property name="loggerId" value="1" />
        <property name="loggerType" value="3" />
    </bean>

</beans>