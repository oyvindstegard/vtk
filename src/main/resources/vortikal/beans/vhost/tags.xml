<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans.dtd">
<beans>

  <bean id="tags.viewService" class="org.vortikal.web.service.ServiceImpl">
    <property name="parent" ref="collectionListing.viewService" />
    <property name="order" value="-1" />
    <property name="assertions">
      <list>
        <ref bean="tags.tagsParameterAssertion" />
      </list>
    </property>
    <property name="handlerInterceptors">
      <list>
        <ref bean="noCacheViewHandlerInterceptor" />
      </list>
    </property>
    <property name="handler" ref="tags.handler" />
    <property name="attributes">
      <map>
        <entry key="decorating.servicePredicateName" value="tags" />
      </map>
    </property>
    <property name="serviceNameProvider" ref="tags.viewService.serviceNameProvider" />
  </bean>

  <bean id="tags.viewService.serviceNameProvider"
    class="org.vortikal.web.service.provider.TagsViewServiceNameProvider">
    <property name="repositoryId" value="${repositoryID}" />
  </bean>

  <bean id="tags.atomService" class="org.vortikal.web.service.ServiceImpl">
    <property name="parent" ref="tags.viewService" />
    <property name="assertions">
      <list>
        <ref bean="feedViewParameterAssertion" />
      </list>
    </property>
    <property name="handler" ref="tags.atomHandler" />
    <property name="serviceNameProvider" ref="tags.viewService.serviceNameProvider" />
  </bean>

  <bean id="feedViewParameterAssertion" class="org.vortikal.web.service.RequestParameterAssertion">
    <property name="parameterName" value="view" />
    <property name="parameterValue" value="feed" />
  </bean>

  <bean id="tags.handler" class="org.vortikal.web.display.tags.TagsController"
    parent="requestLocalRepositoryAware">
    <property name="viewName" value="tags.tags" />
    <property name="defaultPageLimit" value="${collectionListing.defaultPageLimit}" />
    <property name="searchComponent" ref="tags.searchComponent" />
    <property name="tagElementsProvider" ref="tags.tagElementsProvider" />
    <property name="resourceTypeTree" ref="resourceTypeTree" />
    <property name="alternativeRepresentations">
      <map>
        <entry key="application/atom+xml" value-ref="tags.atomService" />
      </map>
    </property>
  </bean>

  <bean id="tags.tagElementsProvider"
    class="org.vortikal.web.tags.RepositoryTagElementsDataProvider">
    <property name="tagService" ref="tags.viewService" />
    <property name="tagsReporter" ref="tagsReporter" />
    <property name="servesRoot" value="${servesWebRoot}" />
  </bean>

  <bean id="tags.atomHandler" class="org.vortikal.web.display.tags.TagsAsFeedController"
    parent="requestLocalRepositoryAware" depends-on="resourceTypeTree">
    <property name="viewService" ref="viewService" />
    <property name="abdera" ref="abdera" />
    <property name="searchComponent" ref="tags.searchComponent" />
    <!--
      We use creationTimePropDef as publishedDatePropDef because the
      controller fetches resources independent of type.
      creationTimePropDef is used because it's common to all resources.
    -->
    <property name="publishedDatePropDef" ref="creationTimePropDef" />
    <property name="authorPropDef" ref="createdByPropDef" />
  </bean>

  <bean id="tags.searchComponent" class="org.vortikal.web.search.QueryPartsSearchComponent"
    parent="requestLocalRepositoryAware">
    <property name="name" value="tags.searchComponent" />
    <property name="viewService" ref="webService" />
    <property name="resourceManager" ref="resourceManager" />
    <property name="defaultRecursive" value="true" />
    <property name="sortOrderPropDefPointers">
      <list>
        <value>lastModified</value>
      </list>
    </property>
    <property name="resourceTypeTree" ref="resourceTypeTree" />
    <property name="defaultSortOrder" ref="SORT_ORDER.DESC" />
    <property name="sortOrderMapping">
      <map>
        <entry key="lastModified" value-ref="SORT_ORDER.DESC" />
        <entry key="title" value-ref="SORT_ORDER.ASC" />
      </map>
    </property>
    <property name="listableProperties">
      <list>
        <bean class="org.vortikal.web.search.PropertyDisplayConfig">
          <property name="displayProperty" ref="lastModifiedPropDef" />
          <property name="preventDisplayProperty" ref="collection.hideLastModifiedPropDef" />
        </bean>
        <bean class="org.vortikal.web.search.PropertyDisplayConfig">
          <property name="displayProperty" ref="introductionPropDef" />
          <property name="preventDisplayProperty" ref="collection.hideIntroductionPropDef" />
        </bean>
      </list>
    </property>
    <property name="queryBuilders">
      <list>
        <bean class="org.vortikal.web.search.ScopeQueryBuilder" />
        <bean class="org.vortikal.web.search.ResourceTypeQueryBuilder">
          <property name="resourceTypeTree" ref="resourceTypeTree" />
        </bean>
        <bean class="org.vortikal.web.search.PropertyTermQueryBuilder">
          <property name="parameterName" value="tag" />
          <property name="propertyTypeDefinition" ref="tagsPropDef" />
        </bean>
        <bean class="org.vortikal.web.search.ParsedQueryBuilder">
          <property name="queryString"
            value="(type IN article AND published-date &lt;= {$currentTime}) OR type NOT IN article" />
          <property name="queryParser" ref="searchParser" />
        </bean>
      </list>
    </property>
    <property name="aggregationResolver" ref="aggregationResolver" />
  </bean>

  <bean id="tags.viewResolver" parent="decoratorViewResolver">
    <property name="views">
      <map>
        <entry key="tags.tags" value-ref="tags.tagsview" />
      </map>
    </property>
  </bean>

  <bean id="tags.tagsview" parent="freemarkerView">
    <property name="url" value="pages/tags.ftl" />
    <property name="referenceDataProviders">
      <list>
        <ref bean="resourceContextProvider" />
      </list>
    </property>
    <property name="attributesMap">
      <map>
        <entry key="cssURLs">
          <list>
            <value>${themeBaseURL}/tags.css</value>
            <value>${themeBaseURL}/view-collectionlisting.css</value>
          </list>
        </entry>
        <entry key="searchComponents">
          <list>
            <ref bean="tags.searchComponent" />
          </list>
        </entry>
      </map>
    </property>
  </bean>

  <bean id="tags.tagsParameterAssertion" parent="vrtxParameterEquals">
    <property name="parameterValue" value="tags" />
  </bean>

</beans>