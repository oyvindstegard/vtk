<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd">
    
    <import resource="protection-levels.xml" />

    <!--
        Protection level PROTECTION_LEVEL_UNEDITABLE and mandatory=false are
        default values used by properties, should only be overwritten where
        necessary. Default type of properties is STRING
    -->
    <bean id="abstractPropDef" abstract="true">
        <property name="valueFactory" ref="valueFactory" />
        <property name="valueFormatterRegistry" ref="valueFormatterRegistry" />
        <property name="protectionLevel" ref="PROTECTION_LEVEL_UNEDITABLE" />
        <property name="mandatory" value="false" />
    </bean>
    
    <bean id="valueFactory" class="org.vortikal.repository.resourcetype.ValueFactoryImpl">
        <property name="principalFactory" ref="principalFactory" />
    </bean>
    
    <bean id="valueFormatterRegistry"
        class="org.vortikal.repository.resourcetype.ValueFormatterRegistry">
        <property name="valueFormatters">
            <map>
                <entry key="STRING">
                    <bean class="org.vortikal.repository.resourcetype.StringValueFormatter" />
                </entry>
                <entry key="HTML">
                    <bean class="org.vortikal.repository.resourcetype.HtmlValueFormatter">
                        <property name="htmlUtil" ref="htmlUtil" />
                    </bean>
                </entry>
                <entry key="IMAGE_REF">
                    <bean class="org.vortikal.repository.resourcetype.ImageRefValueFormatter">
                        <property name="thumbnailServiceBeanName" value="displayThumbnailService" />
                        <property name="requireThumbnailService" value="true" />
                    </bean>
                </entry>
                <entry key="JSON">
                    <bean class="org.vortikal.repository.resourcetype.StringValueFormatter" />
                </entry>
                <entry key="INT">
                    <bean class="org.vortikal.repository.resourcetype.IntValueFormatter" />
                </entry>
                <entry key="LONG">
                    <bean class="org.vortikal.repository.resourcetype.LongValueFormatter" />
                </entry>
                <entry key="TIMESTAMP">
                    <bean class="org.vortikal.repository.resourcetype.DateValueFormatter" />
                </entry>
                <entry key="DATE">
                    <bean class="org.vortikal.repository.resourcetype.DateValueFormatter">
                        <constructor-arg value="true" />
                    </bean>
                </entry>
                <entry key="BOOLEAN">
                    <bean class="org.vortikal.repository.resourcetype.BooleanValueFormatter" />
                </entry>
                <entry key="PRINCIPAL">
                    <bean
                        class="org.vortikal.repository.resourcetype.PrincipalValueFormatter">
                        <property name="principalFactory" ref="principalFactory" />
                    </bean>
                </entry>
            </map>
        </property>
    </bean>
    
    <bean id="VALUE_TRUE" class="org.vortikal.repository.resourcetype.Value">
        <constructor-arg type="boolean">
            <value>true</value>
        </constructor-arg>
    </bean>
    
    <bean id="VALUE_FALSE" class="org.vortikal.repository.resourcetype.Value">
        <constructor-arg type="boolean">
            <value>false</value>
        </constructor-arg>
    </bean>
    
    <bean id="TYPE_STRING" class="org.vortikal.repository.resourcetype.PropertyType$Type"
          factory-method="valueOf">
      <constructor-arg>
        <value>STRING</value>
      </constructor-arg>
    </bean>

    <bean id="TYPE_HTML" class="org.vortikal.repository.resourcetype.PropertyType$Type"
          factory-method="valueOf">
      <constructor-arg>
        <value>HTML</value>
      </constructor-arg>
    </bean>

</beans>
