<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p" 
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
                           http://www.springframework.org/schema/context
                           http://www.springframework.org/schema/context/spring-context.xsd
                           http://www.springframework.org/schema/util
                           http://www.springframework.org/schema/util/spring-util.xsd">
  
  <bean id="mediaref.videorefType"
        class="org.vortikal.repository.resourcetype.PrimaryResourceTypeDefinitionImpl">
    <property name="name" value="videoref"/>
    <property name="namespace" ref="DEFAULT_NAMESPACE" />
    <property name="parentTypeDefinition" ref="videoResourceTypeDefinition" />
    <property name="assertions">
      <list>
        <bean class="org.vortikal.resourcemanagement.JSONObjectSelectAssertion">
          <property name="expression" value="resourcetype" />
          <property name="expectedValue" value="videoref" />
        </bean>
      </list>
    </property>
    <property name="propertyTypeDefinitions">
      <list>
        <!-- videoId property -->
        <bean class="org.vortikal.repository.resourcetype.PropertyTypeDefinitionImpl" parent="abstractPropDef">
          <property name="name" value="videoId" />
          <property name="namespace" ref="DEFAULT_NAMESPACE" />
          <property name="type" value="STRING" />
          <property name="propertyEvaluator">
            <bean class="org.vortikal.repository.resourcetype.property.JsonExtractEvaluator">
              <property name="valueFactory" ref="valueFactory" />
              <property name="expression" value="ref.videoId" />
            </bean>
          </property>
        </bean>
        
        <!-- TODO add overriding contentType propdef with evaluator which looks in
             videoref (if available), falls back to standard evaluator otherwise. -->
      </list>
    </property>
  </bean>
  
  <bean id="mediaref.video.contentHandlingInterceptor"
       class="org.vortikal.repository.ResourceContentInterceptor">
    <property name="videoStorageRoot" value="/home/oyvind/usit/vrtxdata/vidstor" />
    <property name="repositoryId" value="${repositoryID}" />
    <property name="videoApiClient" ref="mediaref.video.appclient" />
  </bean>
  
  <bean id="mediaref.video.restTemplate" class="org.springframework.web.client.RestTemplate" >
    <constructor-arg>
      <bean class="org.vortikal.util.web.BasicAuthHttpRequestFactory">
        <property name="username" value="${mediaref.videoapp.username}" />
        <property name="password" value="${mediaref.videoapp.password}" />
      </bean>
    </constructor-arg>
  </bean>
  
  <!-- Videoapp client -->
  <bean id="mediaref.video.appclient" class="org.vortikal.video.rest.VideoApiClient">
    <property name="restTemplate">
      <bean id="mediaref.video.restTemplate" class="org.springframework.web.client.RestTemplate" >
        <constructor-arg>
          <bean class="org.vortikal.util.web.BasicAuthHttpRequestFactory">
            <property name="username" value="${mediaref.videoapp.username}" />
            <property name="password" value="${mediaref.videoapp.password}" />
          </bean>
        </constructor-arg>
        <property name="messageConverters">
          <list>
            <bean class="org.springframework.http.converter.StringHttpMessageConverter" />
            <bean class="org.springframework.http.converter.ByteArrayHttpMessageConverter" />
            <bean class="org.vortikal.util.web.JSONHttpMessageConverter" />
          </list>
        </property>
      </bean>
    </property>
    <property name="repositoryId" value="${repositoryID}" />
  </bean>
  
</beans>
