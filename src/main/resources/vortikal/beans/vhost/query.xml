<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans.dtd">

<beans>

  <bean id="queryParserFactory"
        class="org.vortikal.repository.search.QueryParserFactoryImpl">
    <property name="resourceTypeTree" ref="resourceTypeTree" />
  </bean>

  <bean id="SORT_ORDER.ASC" class="org.vortikal.repository.search.SortFieldDirection"
        factory-method="valueOf">
    <constructor-arg value="ASC" />
  </bean>

  <bean id="SORT_ORDER.DESC" class="org.vortikal.repository.search.SortFieldDirection"
        factory-method="valueOf">
    <constructor-arg value="DESC" />
  </bean>

  <bean id="searchParser" class="org.vortikal.repository.search.ParserImpl">
    <property name="parserFactory" ref="queryParserFactory" />
    <property name="queryStringPreProcessor" ref="queryStringPreProcessor" />
    <property name="resourceTypeTree" ref="resourceTypeTree" />
  </bean>

  <bean id="queryStringPreProcessor"
        class="org.vortikal.repository.search.preprocessor.QueryStringPreProcessorImpl">
    <property name="expressionEvaluators">
      <list>
        <bean class="org.vortikal.repository.search.preprocessor.CurrentDepthExpressionEvaluator" />

        <!-- Wrap CurrentFolderExpressionEvaluator to get escaped output -->
        <bean class="org.vortikal.repository.search.preprocessor.OutputEscapingExpressionEvaluatorWrapper">
          <property name="wrappedEvaluator">
            <bean class="org.vortikal.repository.search.preprocessor.CurrentFolderExpressionEvaluator" />
          </property>
        </bean>
        
        <!-- TODO: Wrap FeaturedArticlesExpressionEvaluator, like CurrentFolderExpressionEvaluator??? -->
        <bean class="org.vortikal.repository.search.preprocessor.FeaturedArticlesExpressionEvaluator"
              parent="repositoryAware">
          <property name="featuredArticlesPropDef" ref="articleListing.featuredArticlesPropDef" />
        </bean>
        
        <!--bean class="org.vortikal.repository.search.preprocessor.ManuallyApprovedResourcesExpressionEvaluator"
              parent="repositoryAware">
          <property name="manuallyApprovedResourcesPropDef" ref="manuallyApprovedResourcesPropDef" />
        </bean-->
              
        <bean class="org.vortikal.repository.search.preprocessor.SubfoldersExpressionEvaluator"
              parent="repositoryAware">
          <property name="recursiveListingPropDef" ref="articleListing.recursiveListingPropDef" />
          <property name="subfolderPropDef" ref="articleListing.recursiveListingSubfoldersPropDef" />
        </bean>

        <bean class="org.vortikal.repository.search.preprocessor.CurrentTimeExpressionEvaluator" />
        
        <bean class="org.vortikal.repository.search.preprocessor.CurrentDateExpressionEvaluator">
           <property name="variableName" value="currentDate" />
        </bean>
      </list>
    </property>
  </bean>

  <!-- Document mapper -->
  <bean id="documentMapper" class="org.vortikal.repository.index.mapping.DocumentMapperImpl"
        depends-on="structuredResource.parser">
    <!-- 
         XXX: This bean depends the structured resource parser being
         initialized (because it modifies the resource type tree)
     -->
    <property name="resourceTypeTree" ref="resourceTypeTree"/>
    <property name="fieldValueMapper" ref="fieldValueMapper"/>
  </bean>

  <!-- Index field value mapper -->  
  <bean id="fieldValueMapper" class="org.vortikal.repository.index.mapping.FieldValueMapper">
    <property name="valueFactory" ref="valueFactory"/>
  </bean>

  <!-- Primary Lucene index accessor instance. Manages low-level access. -->
  <bean id="systemIndexAccessor" class="org.vortikal.repository.index.LuceneIndexManager">
    <property name="storageRootPath" value="${indexStorageRootPath}"/>
    <property name="storageId" value="property_index"/>
    <property name="forceUnlock" value="true"/>
    <property name="maxLockAcquireTimeOnShutdown" value="20"/>
    <property name="maxReadOnlyReaders" value="${indexMaxReadOnlyReaders}" />
    <property name="maxAgingReadOnlyReaders" value="${indexMaxAgingReadOnlyReaders}" />
    <property name="agingReadOnlyReaderThreshold" value="${indexAgingReadOnlyReaderThreshold}" />
    <property name="indexReaderWarmup">
      <bean class="org.vortikal.repository.index.IndexReaderWarmupImpl">
        <property name="lastModifiedPropDef" ref="lastModifiedPropDef" />
        <property name="hiddenPropDef" ref="hiddenPropDef" />
        <property name="luceneQueryBuilder" ref="queryBuilder" />
      </bean>
    </property>
    <property name="mergeFactor" value="4" />
  </bean>

  <!-- Property set index based on primary Lucene index accessor instance.  -->
  <bean id="systemIndex" class="org.vortikal.repository.index.PropertySetIndexImpl">
    <property name="indexAccessor" ref="systemIndexAccessor"/>
    <property name="documentMapper" ref="documentMapper"/>
  </bean>

  <!-- A Lucene index accessor (secondary instance, batch indexing tuned) -->
  <bean id="secondarySystemIndexAccessor" class="org.vortikal.repository.index.LuceneIndexManager">
    <property name="storageRootPath" value="${indexStorageRootPath}"/>
    <property name="storageId" value="property_index.secondary"/>
    <property name="mergeFactor" value="100"/>
    <property name="forceUnlock" value="true"/>
    <property name="maxLockAcquireTimeOnShutdown" value="20"/>
    <property name="closeAfterInitialization" value="true"/>
  </bean>

  <!-- Secondary property set index instance -->
  <bean id="secondarySystemIndex" class="org.vortikal.repository.index.PropertySetIndexImpl">
    <property name="indexAccessor" ref="secondarySystemIndexAccessor"/>
    <property name="documentMapper" ref="documentMapper"/>
  </bean>
  
  <!-- Factory for building Lucene queries. -->
  <bean id="queryBuilder"
        class="org.vortikal.repository.search.query.LuceneQueryBuilderImpl">
    <property name="resourceTypeTree" ref="resourceTypeTree"/>
    <property name="fieldValueMapper" ref="fieldValueMapper"/>
    <property name="queryAuthorizationFilterFactory" ref="queryAuthorizationFilterFactory"/>
    <property name="publishedPropDef" ref="publishedPropDef" />
    <property name="hiddenPropDef" ref="hiddenPropDef" />
  </bean>

  <!-- Searcher implementation (wrapped in throttler)-->
  <bean id="systemIndexSearcher"
        class="org.vortikal.repository.search.ThrottlingSearcherWrapper">
    <property name="maxConcurrentQueries" value="${indexMaxConcurrentQueries}" />
    <property name="searcher">
      <bean class="org.vortikal.repository.search.SearcherImpl">
        <property name="indexAccessor" ref="systemIndexAccessor"/>
        <property name="documentMapper" ref="documentMapper"/>
        <property name="queryBuilder" ref="queryBuilder"/>
        <property name="unauthenticatedQueryMaxDirtyAge" value="${indexUnauthenticatedQueryMaxDirtyAge}" />
      </bean>
    </property>
  </bean>
  
  <bean id="queryAuthorizationFilterFactory"
        class="org.vortikal.repository.search.query.security.CachingQueryAuthorizationFilterFactory">
    <property name="principalManager" ref="principalManager"/>
    <property name="tokenManager" ref="tokenManager"/>
    <property name="roleManager" ref="roleManager"/>
  </bean>

  <!-- Perform incremental updates on property set index from resource changes. -->
  <bean id="systemIndexUpdater" 
       class="org.vortikal.repository.index.observation.PropertySetIndexUpdater">
    <property name="index" ref="systemIndex"/>
    <property name="notifier" ref="repository.resourceChangeNotifier"/>
    <property name="indexDao" ref="repository.indexDao"/>
  </bean>

</beans>
