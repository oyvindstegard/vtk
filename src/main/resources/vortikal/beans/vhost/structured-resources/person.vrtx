resourcetype person {

  properties {
    username : string required,
    getExternalPersonInfo : boolean,
    firstName : string external:userMetadataLdapService,
    surname : string external:userMetadataLdapService,
    title : derived (firstName, surname) 
           eval (firstName + " " + surname),
    position : string external:userMetadataLdapService,
    postalAddress : string multiple external:userMetadataLdapService,
    phone : string multiple external:userMetadataLdapService,
    email : string multiple external:userMetadataLdapService,
    picture : image_ref, 
    pressPhoto : image_ref,
    visitingAddress : string multiple external:userMetadataLdapService,
    availableHours : string,
    room : string,
    rssFeeds : json ( rssTitle : string, rssUrl : string ) multiple,
    projects : json ( projectName : string, projectUrl : string ) multiple, 
    tags : string multiple,
    content : html,
    getExternalScientificInformation : boolean,
    scientificInformation: string multiple external:fridaPublicationsService,
    selectedPublications: simple_html
  }

  edit-rules {
	group images (picture, pressPhoto) (after email) horizontal,
	group hoursRoom (availableHours, room) (after images) horizontal,
	username (size[8]),
	position (after username),
	postalAddress (after surname),
	phone (after postalAddress),
	email (after phone),
	visitingAddress (after images),
	content (after hoursRoom),
	tags (after content),
	projects (after rssFeeds),
	selectedPublications (after tags),
	getExternalScientificInformation (after selectedPublications),
	tags tooltip (en : "(tag1, tag2, ...)", no : "(emneord1, emneord2, ...)", nn : "(emneord1, emneord2, ...)")
  }

  scripts {
    getExternalPersonInfo show-hide onclick (firstName, surname, title, postalAddress, phone, email),
    getExternalScientificInformation show-hide onclick (scientificInformation),
    tags autocomplete (minChars : "1"),
    email multipleinputfields,
    phone multipleinputfields,
    postalAddress multipleinputfields,
    visitingAddress multipleinputfields
  }
  
  services {
    getExternalPersonInfo userMetadataLdapService requires(username),
    getExternalScientificInformation fridaPublicationsService requires(username)
  }

  view-components {
  
    title {
      ##
      [def v resource-prop "." "title"]
      [val v]
      ##
    }

    contact-information {
      ##
          [resource-props "."]
            <div id="contact-info">
            [def document structured-document]
            [if email]
              [def emails resource-prop "." "email"]
              [if emails]
                 <div class="box">
                  <div class="box-thirds">[localized "email"]:&nbsp;</div>
                  <div class="box-two-thirds">
                    [list emails theemail]            
                      [if theemail][val theemail]<br />[endif]
                    [endlist]
                   </div>
                 </div>
              [endif]
            [endif]
            [if phone]
             [def phones resource-prop "." "phone"]
             [if phones]
               <div class="box">
                  <div class="box-thirds">[localized "phone"]:&nbsp;</div>
                  <div class="box-two-thirds">
                    [list phones thephone]            
                      [if thephone][val thephone]<br />[endif]
                    [endlist]
                   </div>
                 </div>
             [endif]
            [endif]
            [if visitingAddress]
             [def visitingAddresses resource-prop "." "visitingAddress"]
             [if visitingAddresses]
              <div class="box">
                  <div class="box-thirds">[localized "visitingAddress"]:&nbsp;</div>
                  <div class="box-two-thirds">
                    [list visitingAddresses thevisitingAddress]            
                      [if thevisitingAddress][val thevisitingAddress]<br />[endif]
                    [endlist]
                   </div>
                 </div>
             [endif]
            [endif]
            [if room]
              <div class="box">
                  <div class="box-thirds">[localized "room"]:&nbsp;</div>
                  <div class="box-two-thirds">      
                      [if room][val room][endif]
                  </div>
              </div>
            [endif]
            [if availableHours]
              <div class="box">
                  <div class="box-thirds">[localized "availableHours"]:&nbsp;</div>
                  <div class="box-two-thirds">      
                      [if availableHours][val availableHours][endif]
                  </div>
              </div>
            [endif]
            [if postalAddress]
              [def postalAddresses resource-prop "." "postalAddress"]
              [if postalAddresses]
                 <div class="box">
                  <div class="box-thirds">[localized "postalAddress"]:&nbsp;</div>
                  <div class="box-two-thirds">
                    [list postalAddresses thepostalAddress]            
                      [if thepostalAddress][val thepostalAddress]<br />[endif]
                    [endlist]
                   </div>
                 </div>
              [endif]
            [endif]
          </div>  
      ##
    }
    
    box-feeds {
      ##
        [resource-props "."]
        [if rssFeeds]
            [def document structured-document]
            [def feeds json-attr document "properties.rssFeeds"]
            [if feeds]
                [list feeds feed]
                    <div class="narrow-box-borders">
                       [def thetitle json-attr feed "rssTitle"]
                       [def theurl json-attr feed "rssUrl"]
                       
                     [if thetitle]  
                       [if theurl]
                         <h2><a href="[val theurl]">[val thetitle]</a></h2>
                       [else]  
                         <h2>[val thetitle]</h2>
                       [endif]
                     [endif]   
                       [if theurl]TODO: invoke RSS component ... [val theurl][endif]  
                    </div>
                [endlist]
            [endif]
        [endif]
      ##
    }
    
    person-image {
      ##
      [def img-uri resource-prop "." "picture"]
      [def img-press-uri resource-prop "." "pressPhoto"]
      [if img-uri]
        [def img resource img-uri]
        [def pixel-width resource-prop img-uri "pixelWidth"]
        
        [if pixel-width]
          [def style concat "width:" pixel-width "px"]
        [endif]
        <div class="vrtx-person-image">
        [if !img]
          <img class="vrtx-person-image" src="#" alt="[localized "introduction-image-alt"]" />
        [else]
          <img class="vrtx-person-image" src="[val img-uri]" alt="[localized "introduction-image-alt"]" />
        [endif]
        [if img-press-uri]
          (<a id="vrtx-press-image-link" href="[val img-press-uri]">[localized "linkPressPhoto"]</a>)
        [endif]
        </div>
      [endif]
      ##
    }
    
    projects {
      ##
        [resource-props "."]
        [if projects]
            [def document structured-document]
            [def theprojects json-attr document "properties.projects"]
            [if theprojects]
            
            <div class="narrow-box-borders">
              <h2>[localized "projects"]</h2>
                <ul class="list">
                [list theprojects aproject]
                       
                       [def thename json-attr aproject "projectName"]
                       [def theurl json-attr aproject "projectUrl"]

                       [if thename]
                           [if theurl]
                             <li><a href="[val theurl]">[val thename]</a></li>
                           [else]
                             <li>[val thename]</li>
                           [endif]
                       [endif]
                [endlist]
                </ul>
               </div>
            [endif]
        [endif]
      ##
    }
    
     projects-automatic {
       ##
       [resource-props "."]
       [def query "uri = /* type IN jproject"]
       [def result search query]
       [if result]
           <ul>
            [list result res]
              [def url view-url res]
                  [if url]
                     <li><a href="[val url]"></a></li>
                  [else]
                     <li>[val name]</li>
                  [endif]
           [endlist]
           </ul>
       [endif]
       ##
    }
   
    scientific-info {
      ##
        [resource-props "."]
        [if scientificInformation]
        <h2>[localized "fridaPublications"]</h2>
             <ul>     
             [def publications resource-prop "." "scientificInformation"]

             [list publications publication]

               [if publication]
                  <li>[val publication]</li>
               [endif]
               
             [endlist]
             </ul>
        [endif]
      ##
    }
    
  }

  view {
    ##    
    <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
    <html xmlns="http://www.w3.org/1999/xhtml">
      <head>
        <!-- begin css -->
        <person:css />
        <!-- end css -->
        <title><comp:title /></title>
      </head>
      <body>
      <div id="content">
       <h1><comp:title /></h1>
       <div id="left-content">
          <div class="box">
             <div class="box-thirds">
                <comp:person-image />   
             </div>
             <div class="box-two-thirds">
                <comp:contact-information />
             </div>
          </div>
          <json:field select="content" />
          <resource:tags />
          <comp:scientific-info />
        </div>
        <div id="right-content">
            <comp:box-feeds />  
            <comp:projects />
        </div>
      </div>
      </body>
    </html>
    ##
  }
  
  localization {
  
    username : (en : "Username", no : "Brukernavn", nn : "Brukarnamn"),
    getExternalPersonInfo : (en : "Get external information (ldap)", no : "Hent ekstern informasjon (ldap)", nn : "Hent ekstern informasjon (ldap)"),
    firstName : (en : "First name", no : "Fornavn", nn : "Fornamn"),
    surname : (en : "Surname", no : "Etternavn", nn : "Etternamn"),
    postalAddress : (en : "Address", no : "Adresse", nn : "Adresse"),
    visitingAddress : (en : "Visiting address", no : "Besøksadresse", nn : "Besøksadresse"),
    email : (en : "Email", no : "E-post", nn : "E-post"),
    position : (en : "Position", no : "Stilling", nn : "Stilling"), 
    webPage : (en : "Web page", no : "Webside", nn : "Webside"),
    phone : (en : "Phone", no : "Telefon", nn : "Telefon"),
    officeNumber : (en : "Office number", no : "Kontor", nn : "Kontor"),
    availableHours : (en : "Available hours", no : "Treffetider", nn : "Treffetider"),
    picture : (en : "Picture", no : "Bilde", nn : "Bilete"),
    linkPressPhoto : (en : "link to press photo", no : "lenke til pressebilde", nn : "lenke til pressebilde"),
    getExternalScientificInformation : (en : "Get external scientific information (frida)", no : "Hent ekstern vitenskapelig informasjon (frida)", nn : "Hent ekstern vitenskapelig informasjon (frida)"),
    fridaPublications : (en : "Publications", no : "Publikasjoner", nn : "Publikasjoner"),
    selectedPublications : (en : "Selected publications", no : "Utvalgte publikasjoner", nn : "Utvalgte publikasjoner"),
    tags : (en : "Tags", no : "Emneord", nn : "Emneord"),
    content : (en : "Content", no :"Innhold",nn:"Innhold"),
    rssFeeds : (en : "Links to RSS",no : "Lenker til RSS-strømmer", nn :"Lenker til RSS-strømmar"),
    rssTitle : (en : "Title",no : "Tittel", nn : "Tittel"),
    rssUrl : (en : "RSS link",no : "RSS lenke", nn :"RSS lenke"),
    projects : (en : "Projects",no : "Prosjekter", nn :"Prosjektar"),
    projectName : (en : "Project name",no : "Prosjektnavn", nn :"Prosjektnamn"), 
    projectUrl : (en : "Project link",no : "Prosjektlenke", nn :"Prosjeklenke"),
    pressPhoto : (en : "Press photo", no : "Pressebilde", nn : "Pressebilde"),
    room : (en : "Room", no : "Rom", nn : "Rom")
  }
}
