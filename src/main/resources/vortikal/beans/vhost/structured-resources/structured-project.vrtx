resourcetype structured-project {

  properties {
    name : string,
    title : derived (name) eval (name) overrides title,
    status-ongoing : boolean,
    introduction : simple_html,
    picture : image_ref,
    caption : simple_html,
    content : html noextract,
    participantsUsernames : string multiple,
    participants : json (participantName:string, participantUrl:string) multiple,
    contactInfo : html noextract,
    tags : string multiple overrides tags,
    rssFeeds : json (rssTitle:string, rssUrl:string) multiple
  }
  
  edit-rules {
    caption (size[small]),
    group introImageAndCaption (picture, caption) (after introduction) vertical,
    tags tooltip (en : "(Tag1, Tag2, ...)", no : "(Emneord1, Emneord2, ...)", nn : "(Emneord1, Emneord2, ...)")
  }

  scripts {
    participantsUsernames multipleinputfields,
    tags autocomplete (minChars : "1")
  }
    
  view-components {
  
      introduction {
      ##
      [def intro resource-prop(".", "introduction")]
      [if intro != null]
        <div class="vrtx-introduction">[val intro # unescaped]</div>
      [endif]
      ##
    }
  
    completed {
      ##
      [resource-props "."]
      [def document structured-document()]
      [def ongoing json-attr(document, "properties.status-ongoing")]
      [if (ongoing = "false")]
           ([localized "completed"])
      [endif]
      ##
    }
    

    
    introduction-image {
      ##
      [def img-uri resource-prop(".", "picture")]
      [def caption resource-prop(".", "caption")]
      [if img-uri != null]
        [def img resource(img-uri)]
        
        [if img != null]
        
          [def pixel-width resource-prop(img-uri, "pixelWidth")]
          
          [if pixel-width != null]
            [def style concat("width:", concat(pixel-width, "px"))]
            [def img-author resource-prop(img-uri, "authorName")]
        
            [if caption != null]
              <div class="vrtx-introduction-image" style="[val style]">
                <img src="[val img-uri]" alt="[val caption # unescaped 'flattened']"/>
                <div class="vrtx-imagetext">
                  <div class="vrtx-imagedescription">[val caption # unescaped]</div>
                  [if img-author != null]
                    <span class="vrtx-photo">
                      <span class="vrtx-photo-prefix">[localized "photo-prefix"]: </span>[val img-author]
                    </span>
                  [endif]
                </div>
              </div>
            [else]
              [if img-author != null]
                <div class="vrtx-introduction-image" style="[val style]">
                  <img src="[val img-uri]" alt="[localized 'introduction-image-alt']" />
                  <div class="vrtx-imagetext">
                    <span class="vrtx-photo">
                      <span class="vrtx-photo-prefix">[localized "photo-prefix"]: </span>[val img-author]
                    </span>
                  </div>
                </div>
              [else]
                <img class="vrtx-introduction-image" src="[val img-uri]" alt="[localized 'introduction-image-alt']" />
              [endif]
            [endif]
          [else]
            <img class="vrtx-introduction-image" src="[val img-uri]" alt="[localized 'introduction-image-alt']" />
          [endif]
        [else]
          <img class="vrtx-introduction-image" src="[val img-uri]" alt="[localized 'introduction-image-alt']" />
        [endif]
      [endif]
      ##
    }
    
    contact-info {
       ##
       [resource-props "."]
       [def document structured-document()]
       [def contactinfo json-attr(document, "properties.contactInfo")]
       [if contactinfo != null]
         <div class="vrtx-project-contactinfo">
           <h2>[localized "contactInfoView"]</h2>
            [val contactinfo # unescaped]
         </div>
       [endif]
      ##
    }
    
    feeds {
      ##
      [resource-props "."]
      [if rssFeeds != null]
        [def document structured-document()]
        [def feeds json-attr(document, "properties.rssFeeds")]
        [if feeds != null]
          [list feeds feed]
              [def thetitle json-attr(feed, "rssTitle")]
              [def theurl json-attr(feed, "rssUrl")]
              
              [if theurl != null && theurl != ""]         
                [if thetitle != null && thetitle != ""]
                  [call "include:feed"  {"url":theurl, "override-feed-title":thetitle, "feed-title":true, "max-messages":3, "include-if-empty":false}]
                [else]
                  [call "include:feed" {"url":theurl, "feed-title":true, "max-messages":3, "include-if-empty":false}]
                [endif]
              [endif]
          [endlist]
        [endif]
      [endif]
      ##
    }
    
     vrtx-date-info{
      ##
      [resource-props "."]
      [if publish-date != null]
        <div class="vrtx-date-info">
        <span class="published-date-label">[localized "publishedDate"]</span> <span class="published-date">[val publish-date] </span>
        [if publish-date < contentLastModified]
          - <span class="last-modified-date">[localized "contentLastModifiedDate"]</span> <span class="last-modified-date">[val contentLastModified]</span>
        [endif]
        </div>
      [endif]
      ##
    }
  }

  view {
    ##    
    <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
    <html xmlns="http://www.w3.org/1999/xhtml">
      <head>
        <title>[call "json:field" {"select":"name"}] [call "comp:completed"]</title>
      </head>
      <body id="vrtx-structured-project">
        <div id="vrtx-content">
          <div id="vrtx-main-content">
            <h1>[call "json:field" {"select":"name"}] [call "comp:completed"]</h1>
            [call "comp:introduction"]
            [call "comp:introduction-image"]
            [call "json:field" {"select":"content"}]
            [call "resource:tags"]
            [call "comp:vrtx-date-info"]
          </div>
          <div id="vrtx-additional-content">
            [call "comp:contact-info"]
            [call "resource:person-list"]
            [call "comp:feeds"]
          </div>
        </div>
      </body>
    </html>
    ##
  }
  
  vocabulary {
     status-ongoing {
       en : ("true" = "Ongoing", "false" = "Completed"),
       no : ("true" = "Pågående", "false" = "Avsluttet"),
       nn : ("true" = "Pågående", "false" = "Avslutta")
     }
  }
  
  localization {
    name : (en : "Name", no : "Navn", nn : "Navn"),
    introduction : (en : "Introduction",no : "Innledning", nn : "Innleiing"),
    status-ongoing : (en : "Status", no : "Status", nn : "Status"),
    picture : (en: "Image", no: "Bilde", nn : "Bilete"),
    introduction-image-alt : (en: "Image", en: "Bilde", en: "Bilete"),
    caption : (en : "Image caption", no : "Bildetekst", nn : "Bilettekst"),
    photo-prefix : (en : "Photo", no : "Foto", nn : "Photo"),
    participantsHeader : (en : "Participants", no : "Deltakere", nn : "Deltakarar"),
    participantsUsernames : (en : "Participants from UiO (enter the participant username)",no : "Deltakere fra UiO (fyll inn deltakerens brukernavn)", nn :"Deltakarar fra UiO (fyll inn deltakarens brukernavn)"),
    participants : (en : "Other participants", no : "Andre deltakere", nn : "Andre deltakarar"),
    participantName : (en : "Name",no : "Navn", nn :"Namn"),
    participantUrl : (en : "Webaddress",no : "Webadresse", nn :"Webadresse"),
    rssFeeds : (en : "Subscribe to RSS-feeds",no : "Abonner på RSS-strømmer", nn :"Abonner på RSS-strømmar"),
    rssTitle : (en : "Title",no : "Tittel", nn : "Tittel"),
    rssUrl : (en : "Webaddress",no : "Webadresse", nn :"Webadresse"),
    tags : (en : "Tags", no : "Emneord", nn : "Emneord"),
    content : (en : "Content", no :"Innhold",nn : "Innhold"),
    contactInfo : (en : "Contact information", no : "Kontaktinformasjon", nn : "Kontaktinformasjon"),
    contactInfoView : (en : "Contact", no : "Kontakt", nn : "Kontakt"),
    header : (en : "Edit project", no : "Rediger prosjekt", nn : "Rediger prosjekt"),
    publishedDate : (en : "Published", no :"Publisert", nn:"Publisert"),
    contentLastModifiedDate : (en : "Last modified", no : "Sist endret", nn : "Sist endra"),
    completed : (en : "completed", no : "avsluttet", nn : "avslutta")
  }
}
