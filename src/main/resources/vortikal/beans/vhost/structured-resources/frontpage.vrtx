resourcetype frontpage {

  properties {
    title : string overrides title,
    introduction : simple_html,
    picture : image_ref,
    caption : simple_html,
    main-content : json (boxTitle : string, boxType : string, boxCssSizeAndPlacement : string, boxCssColor : string, boxCssSpecial : string, boxPicture : image_ref, boxContent : html, boxUrlText : string, boxUrl : string) multiple noextract,
    additional-content : json (boxTitle : string, boxType : string, boxPicture : image_ref, boxContent : html, boxUrlText : string,  boxUrl : string) multiple noextract,
    cssUrl : string
  }

  edit-rules {
    caption (size[small]),
    main-content:boxCssSizeAndPlacement (dropdown),
    main-content:boxCssColor (dropdown),
    main-content:boxCssSpecial (dropdown),
    group introImageAndCaption (picture, caption) (after introduction) vertical
  }

  view-components {
  
    main-content {
      ##
      [resource-props "."]
      [def document structured-document()]
      [def boxes json-attr(document, "properties.main-content")]
      [if boxes != null]
        [list boxes box]
          [def type json-attr(box, "boxType")]
          [def sizePlacement json-attr(box, "boxCssSizeAndPlacement")]
          [def color json-attr(box, "boxCssColor")]
          [def special json-attr(box, "boxCssSpecial")]
          [def title json-attr(box, "boxTitle")]
          [def picture json-attr(box, "boxPicture")]
          [def content json-attr(box, "boxContent")]
          [def url json-attr(box, "boxUrl")]
          [def urlText json-attr(box, "boxUrlText")]
          [def number _index + 1]
           
          [if type != null && type != ""]
            [if picture != null && picture != ""]
              <div class="vrtx-frontpage-box vrtx-frontpage-box-picture [val type] [val color] [val sizePlacement] [val special]" id="vrtx-main-content-[val number]">
            [else]
              <div class="vrtx-frontpage-box [val type] [val color] [val sizePlacement] [val special]" id="vrtx-main-content-[val number]">
            [endif]
          [else]
            [if picture != null && picture != ""]
              <div class="vrtx-frontpage-box vrtx-frontpage-box-picture" id="vrtx-main-content-[val number]">
            [else]
              <div class="vrtx-frontpage-box" id="vrtx-main-content-[val number]">
            [endif]
          [endif]
          [if title != null && title != ""]
            [if url != null && url != ""]
              <h2><a href="[val url]">[val title]</a></h2>
            [else]
              <h2>[val title]</h2>
            [endif]
          [endif]
          [if picture != null && picture != ""]
            <div class="vrtx-frontpage-box-picture">
              [if url != null && url != ""]
                <a href="[val url]">
                [if title != null && title != ""] 
                  <img src="[val picture]" alt="[val title]" />
                [else]
                  <img src="[val picture]" alt="[val picture]" />
                [endif]
                 </a>
              [else]
                [if title != null && title != ""] 
                  <img src="[val picture]" alt="[val title]" />
                [else]
                  <img src="[val picture]" alt="[val picture]" />
                [endif]
              [endif]
            </div>
            [endif]
            <div class="vrtx-box-content">
              [if content != null && content != ""]
                [val content unescaped]
              [endif]             
            </div> 
            [if urlText != null && urlText != ""]
              <div class="vrtx-more">
              [if url != null && url != ""]
                <span><a href="[val url]">[val urlText]</a></span>
              [else]
                <span>[val urlText]</span>
              [endif]
              </div>
            [endif]
          </div>
        [endlist]
      [endif]
      ##
    }
    
    additional-content {
      ##
      [resource-props "."]
      [def document structured-document()]
      [def boxes json-attr(document, "properties.additional-content")]
      [if boxes != null]
        [list boxes box]
           [def type json-attr(box, "boxType")]
           [def title json-attr(box, "boxTitle")]
           [def picture json-attr(box, "boxPicture")]
           [def content json-attr(box, "boxContent")]
           [def url json-attr(box, "boxUrl")]
           [def urlText json-attr(box, "boxUrlText")]
           [def number _index + 1]
           
           [if type != null && type != ""]
             <div class="vrtx-frontpage-box [val type]" id="vrtx-additional-content-[val number]">
           [else]
             <div class="vrtx-frontpage-box" id="vrtx-additional-content-[val number]">
           [endif] 
             [if title != null && title != ""]
               [if url != null && url != ""]
                 <h2><a href="[val url]">[val title]</a></h2>
               [else]
                 <h2>[val title]</h2>
               [endif]
             [endif]
             [if picture != null && picture != ""]
               <div class="vrtx-frontpage-box-picture">
                 [if url != null && url != ""]
                   <a href="[val url]">
                     [if title != null && title != ""] 
                       <img src="[val picture]" alt="[val title]" />
                     [else]
                       <img src="[val picture]" alt="[val picture]" />
                     [endif]
                   </a>
                 [else]
                   [if title != null && title != ""] 
                     <img src="[val picture]" alt="[val title]" />
                   [else]
                     <img src="[val picture]" alt="[val picture]" />
                   [endif]
                 [endif]
               </div>
             [endif]
             <div class="vrtx-box-content">
               [if content != null && content != ""]
                 [val content unescaped]
               [endif]
             </div>
             [if urlText != null && urlText != ""]
             <div class="vrtx-more">
                [if url != null && url != ""]
                  <span><a href="[val url]">[val urlText]</a></span>
                [else]
                  <span>[val urlText]</span>
                [endif]
              </div>
              [endif]
           </div>      
        [endlist]
      [endif]
      ##
    }
    
    css-link {
      ##
      [resource-props "."]
      [if cssUrl != null && cssUrl != ""]
         <!-- begin custom frontpage css -->
         <link rel="stylesheet" href="[val cssUrl]" type="text/css" media="screen" />
         <!-- end custom frontpage css -->
      [endif]
      ##  
    }
    
    title {
      ##
      [def v resource-prop(".", "title")]
      [val v]
      ##
    }
    
    introduction-image {
      ##
      [def img-uri resource-prop(".", "picture")]
      [def caption resource-prop(".", "caption")]
      [if img-uri != null]
        [def img resource(img-uri)]
        
        [if img != null]
        
          [def pixel-width resource-prop(img-uri, "pixelWidth")]
          
          [if pixel-width != null]
            [def style concat("width:", concat(pixel-width, "px"))]
            [def img-author resource-prop(img-uri, "authorName")]
        
            [if caption != null]
              <div class="vrtx-introduction-image" style="[val style]">
                <img src="[val img-uri]" alt="[val caption unescaped 'flattened']"/>
                <div class="vrtx-imagetext">
                  <div class="vrtx-imagedescription">[val caption unescaped]</div>
                  [if img-author != null]
                    <span class="vrtx-photo">
                      <span class="vrtx-photo-prefix">[localized "photo-prefix"]: </span>[val img-author]
                    </span>
                  [endif]
                </div>
              </div>
            [else]
              [if img-author != null]
                <div class="vrtx-introduction-image" style="[val style]">
                  <img src="[val img-uri]" alt="[localized 'introduction-image-alt']" />
                  <div class="vrtx-imagetext">
                    <span class="vrtx-photo">
                      <span class="vrtx-photo-prefix">[localized "photo-prefix"]: </span>[val img-author]
                    </span>
                  </div>
                </div>
              [else]
                <img class="vrtx-introduction-image" src="[val img-uri]" alt="[localized 'introduction-image-alt']" />
              [endif]
            [endif]
          [else]
            <img class="vrtx-introduction-image" src="[val img-uri]" alt="[localized 'introduction-image-alt']" />
          [endif]
        [else]
          <img class="vrtx-introduction-image" src="[val img-uri]" alt="[localized 'introduction-image-alt']" />
        [endif]
      [endif]
      ##
    }

    introduction {
      ##
      [def intro resource-prop(".", "introduction")]
      [if intro != null]
        <div class="vrtx-introduction">[val intro unescaped]</div>
      [endif]
      ##
    }

  }

  view {
    ##
    <!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
    <html xmlns="http://www.w3.org/1999/xhtml">
      <head>
        <comp:css-link />   
        <title><comp:title /></title>
      </head>
      <body id="vrtx-frontpage">
        <div id="vrtx-content">
          <h1><comp:title /></h1>
          <div id="vrtx-main-content">
            <comp:introduction-image />
            <comp:introduction />   
            <comp:main-content />
          </div>
          <div id="vrtx-additional-content">
            <comp:additional-content />
          </div>
        </div>
      </body>
    </html>
    ##
  }

  vocabulary {
     main-content:boxCssColor {
       en : ("" = "Blanc", "grey-box" = "Grey box", "white-box" = "White box", "white-box-black-header" = "White box with black header"),
       no : ("" = "Blank", "grey-box" = "Grå boks", "white-box" = "Hvit boks", "white-box-black-header" = "Hvit boks med svart topp"),
       nn : ("" = "Blank", "grey-box" = "Grå boks", "white-box" = "Hvit boks", "white-box-black-header" = "Hvit boks med svart topp")
     },
     main-content:boxCssSizeAndPlacement {
       en : ("" = "Full width", "half-box-left" = "Half width left", "half-box-right" = "Half width right"),
       no : ("" = "Full bredde", "half-box-left" = "Halv bredde venstre", "half-box-right" = "Halv bredde høyre"),
       nn : ("" = "Full bredde", "half-box-left" = "Halv bredde venstre", "half-box-right" = "Halv bredde høyre")
     },
     main-content:boxCssSpecial {
       en : ("" = "Nothing",
             "featured-one-big-two-column" = "Featured content - one big",
             "featured-two-column-boxes" = "Two column boxes",
             "two-column-feed" = "RSS in two columns",
             "three-column-feed" = "RSS in three columns"),
       no : ("" = "Ingen",
             "featured-one-big-two-column" = "Fremhevede saker - en stor",
             "featured-two-column-boxes" = "To kolonne bokser",
             "two-column-feed" = "RSS i to kolonner", 
             "three-column-feed" = "RSS i tre kolonner"),
       nn : ("" = "Ingen",
             "featured-one-big-two-column" = "Fremhevede saker - en stor", 
             "featured-two-column-boxes" = "To kolonne bokser", 
             "two-column-feed" = "RSS i to kolonner", 
             "three-column-feed" = "RSS i tre kolonner")
     }
  }

  localization {
     title : (en : "Title", no : "Tittel", nn : "Tittel"),
     introduction : (en : "Introduction", no : "Innledning", nn : "Innleiing"),
     picture : (en: "Image", no: "Bilde", nn : "Bilete"),
     introduction-image-alt : (en : "Image", no : "Bilde", nn : "Bilete"),
     photo-prefix : (en : "Photo", no : "Foto", nn : "Photo"),
     caption : (en : "Image caption", no : "Bildetekst", nn : "Bilettekst"),
     main-content : (en : "Main content", no : "Hovedinnhold", nn : "Hovedinnhold"),
     additional-content : (en : "Additional content (default as right-column)", no : "Relatert innhold (default som høyrespalte)", nn : "Relatert innhald (default som høyrespalte)"),
     boxTitle : (en : "Title", no : "Tittel", nn : "Tittel"),
     boxType : (en : "Type", no : "Type", nn : "Type"),
     boxCssSizeAndPlacement : (en : "Size and placement", no : "Størrelse og plassering", nn : "Størrelse og plassering"), 
     boxCssColor : (en : "Color", no : "Farge", nn : "Farge"),
     boxCssSpecial : (en : "Special settings", no : "Spesielle instillinger", nn : "Spesielle instillinger"),
     boxPicture : (en: "Image", no: "Bilde", nn : "Bilete"),
     boxContent : (en : "Content", no : "Innhold", nn : "Innhald"),
     boxUrlText : (en : "Link text", no : "Lenketekst", nn : "Lenketekst"),
     boxUrl : (en : "Webaddress", no : "Webadresse", nn : "Webadresse"),
     header : (en : "Edit frontpage", no : "Rediger forside", nn : "Rediger forside"),
     cssUrl : (en : "Include CSS", no : "Inkluder CSS", nn : "Inkluder CSS")
  }
}