<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd">

<!-- Beans for repository data reporting -->

  <!-- Data report manager -->
  <bean id="dataReportManager" class="org.vortikal.repository.reporting.DataReportManagerImpl">
    <property name="dataReportDAO" ref="repository.indexDataReportDAO" />
    <property name="cache" ref="dataReportManagerCache" />
    <property name="defaultStaticScoping" ref="dataReportManager.defaultStaticScoping" />
  </bean>

  <!-- List of static scopes which should always be applied for data report queries -->
  <bean id="dataReportManager.defaultStaticScoping"
        class="java.util.ArrayList">
    <constructor-arg>
      <list>
        <!-- Only include published resources -->
        <bean class="org.vortikal.repository.reporting.ResourcePropertyValueScope">
          <constructor-arg ref="publishedPropDef" />
          <constructor-arg>
            <set>
              <ref bean="VALUE_TRUE"/>
            </set>
          </constructor-arg>
        </bean>
      </list>
    </constructor-arg>
  </bean>

  <!-- A SimpleCache instance for the data report manager -->
  <bean id="dataReportManagerCache" class="org.vortikal.util.cache.SimpleCacheImpl">
    <property name="refreshTimestampOnGet" value="false" />
    <property name="timeoutSeconds" value="60" />
  </bean>

  <!-- Data report DAO using system index -->
  <bean id="repository.indexDataReportDAO" class="org.vortikal.repository.index.IndexDataReportDAO">
    <property name="systemIndexAccessor" ref="systemIndexAccessor" />
    <property name="documentMapper" ref="documentMapper" />
    <property name="fieldValueMapper" ref="fieldValueMapper" />
    <property name="scopeFilterFactory" ref="repository.indexDataReportDAOScopeFilterFactory" />
  </bean>

  <bean id="repository.indexDataReportDAOScopeFilterFactory"
        class="org.vortikal.repository.index.IndexDataReportScopeFilterFactoryImpl">

    <property name="queryAuthorizationFilterFactory" ref="queryAuthorizationFilterFactory" />
    <property name="fieldValueMapper" ref="fieldValueMapper" />
  </bean>

  <!-- Data report DAO using database (This DAO has poor scoping support) -->
  <!--bean id="repository.dataReportDAO" class="org.vortikal.repository.store.db.SqlMapDataReportDAO">
    <property name="sqlMapClient" ref="repository.sqlMapClient" />
    <property name="sqlMaps" ref="repository.statementMappings" />
    <property name="valueFactory" ref="valueFactory" />
  </bean-->

</beans>