<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans.dtd">

<beans>

  <bean id="transformXmlHandlerInterceptor"
        class="org.vortikal.web.controller.HeaderControlHandlerInterceptor">
    <property name="includeLastModifiedHeader" value="false" />
    <property name="includeEtagHeader" value="false" />
    <property name="expiresHeaderProperty" ref="expiresSecPropDef" />
  </bean>


  <bean id="rssTransformService" class="org.vortikal.web.service.ServiceImpl">
    <!--property name="parent" ref="displayResourceService" /-->
    <property name="parent" ref="viewService" />
    <property name="assertions">
      <list>
        <ref bean="contentTypeMatchesXml" />
        <ref bean="rssParameterSetAssertion" />
        <ref bean="rssXslStylesheetAvailable" />
      </list>
    </property>
    <property name="handlerInterceptors">
      <list>
        <ref bean="transformXmlHandlerInterceptor" />
      </list>
    </property>
    <property name="handler">
      <ref bean="displayRssResourceHandler" />
    </property>
  </bean>
  
  <bean id="rssXslStylesheetAvailable"
        class="org.vortikal.web.service.XmlSchemaXPathAssertion">
    <property name="schemaRegistry" ref="schemaRegistry" />
    <property name="schemaPropertyDefinition" ref="schemaPropDef" />
    <property name="xpath" value="${rssXslTransformationSchemaXPath}" />
  </bean>

  <bean id="rawXmlQueryService" class="org.vortikal.web.service.ServiceImpl">
    <property name="parent" ref="viewService" />
    <property name="assertions">
      <list>
        <!--ref bean="contentTypeMatchesXml" /-->
        <ref bean="xmlQueryParameterSetAssertion" />
      </list>
    </property>
    <property name="handler">
      <ref bean="rawXmlQueryHandler" />
    </property>
  </bean>

  <bean id="rawXmlQueryHandler" class="org.vortikal.web.controller.index.XmlQueryController"
        parent="requestLocalRepositoryAware">
    <property name="xmlSearcher" ref="xmlSearcher" />
  </bean>


  <bean id="transformXmlToHtmlViewResolver" class="org.vortikal.web.view.decorating.MappingViewResolver">
    <property name="views">
      <map>
        <entry key="transformXmlResource" value-ref="transformXmlView" />
      </map>
    </property>
    <property name="viewWrapper" ref="decoratingViewWrapper" />
  </bean>


  <bean id="transformXmlToRssViewResolver"
        class="org.vortikal.web.view.decorating.MappingViewResolver">
    <property name="views">
      <map>
        <entry key="transformRssResource" value-ref="transformRssView" />
      </map>
    </property>
  </bean>




  <bean id="previewXmlTransformService" class="org.vortikal.web.service.ServiceImpl">
    <property name="parent" ref="previewService" />
    <property name="order" value="0" />
    <property name="assertions">
      <list>
        <ref bean="resourceIsManagedXml" />
        <ref bean="viewXslStylesheetAvailable" />
      </list>
    </property>
    <property name="handler">
      <ref bean="previewXmlResourceHandler" />
    </property>
  </bean>




  <bean id="resourceIsManagedXml" class="org.vortikal.web.service.ResourceTypeAssertion">
    <property name="resourceTypeDefinition" ref="managedXmlResource" />
  </bean>

  <bean id="viewXslStylesheetAvailable"
        class="org.vortikal.web.service.XmlSchemaXPathAssertion">
    <property name="schemaRegistry" ref="schemaRegistry" />
    <property name="schemaPropertyDefinition" ref="schemaPropDef" />
    <property name="xpath" value="${viewXslTransformationSchemaXPath}" />
  </bean>

  <bean id="xmlQueryParameterSetAssertion"
        class="org.vortikal.web.service.RequestParameterAssertion">
    <property name="parameterName" value="vrtx" />
    <property name="parameterValue" value="xml-query" />
  </bean>


  <bean id="xmlTransformService" class="org.vortikal.web.service.ServiceImpl">

    <!--property name="parent" ref="displayResourceService" /-->
    <property name="parent" ref="viewService" />
    <property name="order" value="0" />

    <property name="assertions">
      <list>
        <ref bean="resourceIsManagedXml" />
        <ref bean="viewXslStylesheetAvailable" />
      </list>
    </property>
    <property name="handlerInterceptors">
      <list>
        <ref bean="transformXmlHandlerInterceptor" />
      </list>
    </property>
    <property name="handler">
      <ref bean="displayXmlResourceHandler" />
    </property>

  </bean>

   <bean id="propertyAccessor" class="org.vortikal.web.view.PropertyAccessor"
         parent="requestLocalRepositoryAware">
     <property name="formatter" ref="valueFormatter" />
     <property name="resourceTypeTree" ref="resourceTypeTree" />
   </bean>

  <bean id="transformXmlView" 
        class="org.vortikal.web.view.xslt.ResourceXsltView">
    <property name="transformerManager" ref="transformerManager" />
    <property name="includeContentLanguageHeader" value="true" />
    <property name="staticAttributes">
      <map>
        <entry key="Searcher" value-ref="xmlSearcher" />
        <entry key="LinkConstructor" value-ref="linkConstructor" />
        <entry key="PropertyAccessor" value-ref="propertyAccessor" />
      </map>
    </property>
    <property name="referenceDataProviders">
      <list>
        <ref bean="xslBeanProvider" />
        <bean class="org.vortikal.web.referencedata.provider.ResourceServiceURLProvider"
          parent="requestLocalRepositoryAware">
          <property name="service" ref="rssTransformService" />
          <property name="modelName" value="xsltParameters" />
          <property name="urlName" value="RSS-URL" />
        </bean>
        <ref bean="resourceContextProvider" />
      </list>
  </property>
  </bean>

  <bean id="transformRssView" class="org.vortikal.web.view.xslt.ResourceXsltView">
    <property name="transformerManager" ref="rssTransformerManager" />
    <property name="staticAttributes">
      <map>
        <entry key="Searcher" value-ref="xmlSearcher" />
        <entry key="LinkConstructor" value-ref="linkConstructor" />
        <entry key="PropertyAccessor" value-ref="propertyAccessor" />
      </map>
    </property>
    <property name="referenceDataProviders">
      <list>
        <ref bean="xslBeanProvider" />
        <bean class="org.vortikal.web.referencedata.provider.ResourceServiceURLProvider"
              parent="requestLocalRepositoryAware">
          <property name="service" ref="viewService" />
          <property name="modelName" value="xsltParameters" />
          <property name="urlName" value="VIEW-URL" />
        </bean>
      </list>
    </property>
  </bean>


  <bean id="xslBeanProvider"
        class="org.vortikal.web.referencedata.provider.XSLReferenceDataProvider"
        parent="requestLocalRepositoryAware">
    <description>
      This reference data provider adds some metadata to the model for use when transforming XML documents.
    </description>
    <property name="service" ref="viewService" />
    <property name="adminService" ref="manageService" />
    <property name="modelName" value="xsltParameters" />
    <property name="breadCrumbProvider" ref="viewBreadCrumbProvider" />
  </bean>

  <bean id="xmlSearcher"
        class="org.vortikal.repository.search.XmlSearcher"
        parent="requestLocalRepositoryAware">
    <property name="searcher" ref="systemIndexSearcher" />
    <property name="parser" ref="searchParser" />
    <property name="resourceTypeTree" ref="resourceTypeTree" />
    <property name="defaultLocale" value="${defaultLocale}" />

    <property name="valueFormatter" ref="valueFormatter" />

    <property name="linkToService" ref="viewService" />
    <property name="collectionResourceTypeDef"
              ref="collectionResourceTypeDefinition" />
  </bean>


  <bean id="rawXmlQueryURLProvider"
        class="org.vortikal.web.referencedata.provider.ResourceServiceURLProvider"
        parent="requestLocalRepositoryAware">
    <property name="modelName" value="xsltParameters" />
    <property name="urlName" value="rawXmlQueryURL" />
    <property name="service" ref="rawXmlQueryService" />
  </bean>


  <bean id="xmlStylesheetInDocumentResolver"
        class="org.vortikal.xml.StylesheetInDocumentResolver" />

  <bean id="xmlStylesheetInSchemaResolver" class="org.vortikal.xml.StylesheetInSchemaResolver">
    <property name="schemaRegistry" ref="schemaRegistry"/>
    <property name="elementXPath" value="${viewXslTransformationSchemaXPath}" />

  </bean>



   <bean id="xsltTransformationRepositoryURIResolver"
         class="org.vortikal.xml.RepositoryURIResolver"
         parent="requestLocalRepositoryAware">
     <description>
       No token is defined here, in order to use the user's actual
       token during transformation, for XSLT document() calls.

       Although one could specify a file path URI resolver here, it
       would make no sense in most cases, as document() calls works
       with documents located preferably in the repository.
     </description>
     
   </bean>

  <bean id="standardXslStylesheetResolvers" class="java.util.ArrayList">
    <constructor-arg>
      <list>
         <ref bean="xmlStylesheetInDocumentResolver" />
         <ref bean="xmlStylesheetInSchemaResolver" />
      </list>
    </constructor-arg>
  </bean>




   <bean id="xsltCompilationFileURIResolver" class="org.vortikal.xml.FileURIResolver">
     <description>
       This URI resolver gets stylesheets from 'file://' type URLs.
     </description>     
   </bean>

   <bean id="xsltCompilationFilePathURIResolver" class="org.vortikal.xml.FilePathURIResolver">
     <description>
       This URI resolver gets stylesheets from file paths starting
       with '/', e.g. '/foo/bar' (and NOT 'file://' type URLs).
     </description>     
     <property name="prefix" value="${xslFilePath}" />
   </bean>

   <bean id="xsltCompilationRepositoryURIResolver"
         class="org.vortikal.xml.RepositoryURIResolver"
         parent="requestLocalRepositoryAware">
     <description>
       This URI resolver gets stylesheets from the repository. It uses
       a trusted token, as is is only used during compilation of the
       stylesheets, not for document() calls.
     </description>
     <property name="prefix" value="${xslRepositoryPath}" />
   </bean>

  <bean id="standardXslCompilationResolvers" class="java.util.ArrayList">
    <constructor-arg>
      <list>
         <ref bean="xsltCompilationFilePathURIResolver" />
         <ref bean="xsltCompilationFileURIResolver" />
      </list>
    </constructor-arg>
  </bean>


   <bean id="transformerManager" class="org.vortikal.xml.TransformerManager">
     <description>
       XSLT Transformer manager
     </description>
     <property name="stylesheetReferenceResolvers" ref="standardXslStylesheetResolvers" />
     <property name="compilationURIResolvers" ref="standardXslCompilationResolvers" />
     <property name="transformationURIResolvers">
       <description>
         This is the list of URI resolvers used to obtain the XML
         document resources during transformation (via the document()
         call in XSL). This list SHOULD contain only one URI resolver
         that gets resources from the repository, as it is not
         generally advisable to allow document() calls to operate on
         the file system.
       </description>
       <list>
         <ref bean="xsltTransformationRepositoryURIResolver" />
       </list>
     </property>
     <property name="transformationThrottle" ref="xmlTransformationThrottle" />
   </bean>

   <bean id="xmlTransformationThrottle" class="org.vortikal.xml.TransformationThrottle">
     <property name="size" value="${xslMaxSimultaneousTransformations}" />
   </bean>

   <bean id="rssTransformerManager" parent="transformerManager">
     <description>
       XSLT Transformer manager for RSS-generation
     </description>
     <property name="stylesheetReferenceResolvers">
       <list>
         <bean class="org.vortikal.xml.StylesheetInSchemaResolver">
           <property name="schemaRegistry" ref="schemaRegistry" />
           <property name="elementXPath" value="${rssXslTransformationSchemaXPath}" />
         </bean>
       </list>
     </property>
   </bean>


   

  <bean id="previewXmlResourceHandler" 
    class="org.vortikal.web.controller.ResourceServiceURLController"
    parent="requestLocalRepositoryAware">
    <!--property name="service" ref="displayResourceService" /-->
    <property name="service" ref="displayResourceService" />
    <property name="viewName" value="previewIframe" />
  </bean>


  <!--
  <bean id="displayXmlResourceHandler" 
    class="org.vortikal.web.controller.DisplayXmlResourceController"
    parent="requestLocalRepositoryAware">
    <property name="handleLastModified" value="false" />
    <property name="transformerManager" ref="transformerManager" />
    <property name="viewName" value="transformXmlResource"/>
  </bean>
  -->

  <bean id="displayXmlResourceHandler"
        class="org.vortikal.web.controller.DisplayXmlResourceController"
        parent="requestLocalRepositoryAware">
    <description>This is used as parent for all similar handlers</description>
    <property name="transformerManager" ref="transformerManager" />
    <property name="viewName" value="transformXmlResource"/>
    <property name="handleLastModified" value="true" />
    <property name="lastModifiedEvaluator" ref="displayXmlHandlerLastModifiedEvaluator" />
  </bean> 

  <bean id="displayXmlHandlerLastModifiedEvaluator"
        class="org.vortikal.web.controller.LastModifiedEvaluatorImpl">
    <property name="propertyDefinition" ref="schemaPropDef" />
    <property name="handleLastModifiedForValuesInList" value="true" />
    <property name="lookupList" ref="displayXmlHandleLastModifiedList" />
  </bean> 

  <bean id="displayXmlHandleLastModifiedList" class="org.vortikal.context.CSVListFactoryBean">
    <description>
      Only handle (or do not handle) last-modified for xml-dokuments
      with the schemas in this list
    </description>
    <property name="csvList" value="${xsltHandleLastModifiedSchemas}" />
  </bean>


  <bean id="displayRssResourceHandler" 
    class="org.vortikal.web.controller.DisplayXmlResourceController"
    parent="requestLocalRepositoryAware">
    <property name="transformerManager" ref="rssTransformerManager" />
    <property name="viewName" value="transformRssResource" />
  </bean>


  <bean id="abstractManageXsltErrorHandler"
        class="org.vortikal.web.DefaultErrorHandler"
        parent="abstractReferencedataProvidingErrorHandler" abstract="true">
    <description>Provides specific handling of XSLT-related errors in the manage service</description>
    <property name="service" ref="manageService" />
    <property name="errorViewName" value="manageXsltError" />
  </bean>


  <!-- Add error handlers and views to the manage service -->

  <bean id="manageXmlBuildErrorHandler" class="org.vortikal.web.DefaultErrorHandler"
        parent="abstractReferencedataProvidingErrorHandler">
    <description>
      Provides error handling errors that occur when building XML
      (JDOM) documents for services in the 'manageService' tree.
    </description>
    <property name="service" ref="manageService" />
    <property name="errorType">
      <bean class="java.lang.Class" factory-method="forName">
        <constructor-arg value="org.jdom.input.JDOMParseException" />
      </bean>
    </property>
    <property name="errorViewName" value="manageXmlBuildError" />
  </bean>


  <bean id="manageStylesheetCompilationExceptionErrorHandler" parent="abstractManageXsltErrorHandler">
    <property name="errorType">
      <bean class="java.lang.Class" factory-method="forName">
        <constructor-arg value="org.vortikal.xml.StylesheetCompilationException" />
      </bean>
    </property>
  </bean>


  <bean id="manageTransformerConfigurationExceptionErrorHandler" parent="abstractManageXsltErrorHandler">
    <property name="errorType">
      <bean class="java.lang.Class" factory-method="forName">
        <constructor-arg value="javax.xml.transform.TransformerConfigurationException" />
      </bean>
    </property>
  </bean>


  <bean id="manageTransformerExceptionErrorHandler" parent="abstractManageXsltErrorHandler">
    <property name="errorType">
      <bean class="java.lang.Class" factory-method="forName">
        <constructor-arg value="javax.xml.transform.TransformerException" />
      </bean>
    </property>
  </bean>


  <bean id="transformXmlManageErrorViewResolver"
        class="org.vortikal.web.view.decorating.MappingViewResolver">
    <property name="views">
      <map>
        <entry key="manageXsltError" value-ref="manageXsltErrorView" />
        <entry key="manageXmlBuildError" value-ref="manageXmlBuildErrorView" />
      </map>
    </property>
    <property name="viewWrapper" ref="manageViewWrapper" />
  </bean>
  

  <bean id="manageXsltErrorView" parent="freemarkerView">
    <property name="url" value="pages/error/xslt-error.ftl" />
  </bean>

  <bean id="manageXmlBuildErrorView" parent="freemarkerView">
    <property name="url" value="pages/error/preview-xml-error.ftl" />
  </bean>



</beans>
