################################################################
# 
# Web-app configuration
# 
# The variables defined in this file are project defaults, and may be
# overridden by setting them in the (personal) build.properties file
# (in project directory). This is the recommended approach.
# 
################################################################

# Base path for "non-repository" resources (bundled resources,
# application resources):
vrtx.staticResourcesBaseURL = /vrtx/__vrtx

webResources.baseURL = ${vrtx.staticResourcesBaseURL}/static-resources
webResources.physicalLocation = classpath:///web

appResources.baseURL = ${vrtx.staticResourcesBaseURL}/app-resources

staticResourcesCacheSeconds = -1

# Main web service config:
# A value of '*' means 'any hostname', 'any protocol', 'any port, etc.'
webHostName = *
webProtocol = *
webPort = *
webService.maxConcurrentRequests = -1
webService.tooManyRequests.rejectStatus = 503

# WebDAV (host, protocol, port) config:
webdavHostName = *
webdavProtocol = http
webdavPort = 9321
webdav.collectionContentType = httpd/unix-directory


# Support If-headers on WebDAV?
webdavSupportIfHeaders = false
# Support ETag-headers on WebDAV?
webdavSupportETags = true
webdav.deniedFiles = \\.DS_Store, \\._\\.DS_Store
#webdav.deniedFiles = \\.DS_Store, \\._.*


sessionValidation.authorizedAddresses = 

# Configuration file containing URI prefixes for which to require
# secure (SSL) access:
ssl.configFile = /vrtx/ssl-config.txt

# Default locale settings:
manage.defaultLocale = en
view.defaultLocale = en

# Bundled decorator templates:
manage.decoratorTemplatesLocation = classpath:///vortikal/decorator-templates
article.decoratorTemplatesLocation classpath:///vortikal/decorator-templates

# "Dynamic" info message:
manage.infoMessageFolderLocation = file://${user.home}/
manage.infoMessageDefaultFile = vrtx-message


# Start a management console?
# example: shell.InitFiles = classpath\:repository-utils.bsh,classpath\:service-utils.bsh
shell.initFiles =
shell.runEvalLoop = false
shell.listenPort = 9998
shell.listenAddress = localhost

vshell.initFiles =
vshell.runEvalLoop = true
vshell.listenPort = 9999
vshell.listenAddress = localhost
vshell.commandsLocation = classpath:vortikal/beans/standard-extensions/vshell/commands
vshell.sessionAuthenticator = vshell.rootPasswordSessionAuthenticator



defaultPrincipalDomain =
defaultGroupDomain =

authenticationRealm = Vortex

password.root@localhost = 0a4872c6927f992f3808955b0938f808
password.vortex@localhost = b46c78fb2455c0875e8f5d35515e9fe7
# password = 'pw': 
password.user@localhost = 6292e997b1b4cf500c7356d6c6593b7e

# Server administrator (webmaster):
webmaster = me@my-email.com

structuredResources.definitionsLocation = classpath:/vortikal/beans/vhost/structured-resources.vrtx
structuredResources.recompileScriptLocation = classpath:/vortikal/beans/standard-extensions/structured-resources-refresh/recompile.bsh

# Index files to override collection listing:
indexFiles = index.xml,index.html

# URI character encoding used for index file (sub) requests: This
# setting may depend on how the servlet container decodes request URIs
# and on any request filters that are configured.
indexFileHandlerURIEncoding = iso-8859-1

# Default page limit for collection listings:
collectionListing.defaultPageLimit = 25

# Local principals in repository (loaded if exists):
repositoryPasswdFile = /vrtx/passwd

# Perform a Javascript-based visualization of broken links in preview mode?
preview.visualizeBrokenLinks = true

# Path to the collection of XSL templates used for transforming XML
# documents:
# xslFilePath =

# Negative value means "no limit": 
xslMaxSimultaneousTransformations=-1

# Local groups in repository (loaded if exists):
repositoryGroupsFile = /vrtx/groups

# Possible values: httpBasicAuthenticationChallenge, httpDigestAuthenticationChallenge
webAuthenticationChallenge = httpDigestAuthenticationChallenge
webdavAuthenticationChallenge = httpDigestAuthenticationChallenge


httpBasicAuthenticationHandler.requireSecureConnection = false

# Produce stacktraces and extended error information on error pages?
debugErrors = true

# Path to freemarker templates (to override, use file:///) 
templateLoaderPath = classpath:/vortikal/ftl

# Is freemarker debugging enabled?
freemarkerDebug = false

xslRepositoryPath = /vrtx/vortex-webdocuments

# Number of seconds XML schemas are cached:
xmlSchemaRegistry.cacheSeconds = 900
# Check cache for expired items every 60 seconds:
xmlSchemaRegistry.cacheRefreshInterval = 60


helpURL = http://www.usit.uio.no/it/vortex/hjelp
editHelpURL = http://www.usit.uio.no/it/vortex/hjelp/admin/xml-edit/


themeBaseURL = ${webResources.baseURL}/themes/default
jsBaseURL = ${webResources.baseURL}/js

# Yahoo YUI base path:
yui.baseURL = ${webResources.baseURL}/yui/2.6.0

# Flash base path
flash.baseURL = ${webResources.baseURL}/swf

jcr.repoConfig = classpath:org/vortikal/repository/store/jcr/repository.xml

repositoryID = localhost
databaseDriver = org.postgresql.Driver
sqlDialect = postgresql
optimizedAclCopySupported = false
maxDatabaseConnections = 10
databaseURL = jdbc:postgresql:vortex
urlEncodeFileNames = false
databaseOperationWarningTimeLimit = 20000 
databaseOperationWarningLogStackTraces = false
repository.tempDir = ${java.io.tmpdir}
repository.maxResourceChildren = 3000

# Default main backend is always cache (whether JCR or not) 
repositoryBackend = repository.cache

# Possible values: repository.sqlMapDao, repository.jcrDao:
# repository.dao is wrapped by repositoryBackend (cache)
repository.dao = repository.sqlMapDao
# Possible values: repository.fsContentStore, repository.jcrDao:
repository.contentStore = repository.fsContentStore
# Possible values: repository.sqlMapCommentDao, repository.jcrCommentDao:
repository.commentDao = repository.sqlMapCommentDao

repository.indexUpdater.interval = 5000
# Check for documents to publish/unpublish every minute
repository.publisher.interval = 60000

resourceCacheSize = 1000
repositoryReadOnly = false

# Report Last-Modified (and handle If-Modified-Since) for documents of
# these types (fully qualified schema URLs):
xsltHandleLastModifiedSchemas = 

# Some well known, often-referred to XML documents are cached (resource URIs):
xslDocumentCachedResources = 

# XSLT stylesheet references for XML documents are placed in the
# document's XML schema, inside an "xsd:annotation" element:
viewXslTransformationSchemaXPath = /xsd:schema/xsd:annotation/xsd:appinfo/view/xsl
editXslTransformationSchemaXPath = /xsd:schema/xsd:annotation/xsd:appinfo/edit/xsl
rssXslTransformationSchemaXPath = /xsd:schema/xsd:annotation/xsd:appinfo/rss/xsl

# Add this if you want something added to the classpath (external bean config, jars...)
# comma separated list of entries
#classpath =


# Default values for property evaluation:
defaultTextResourceCharacterEncoding = utf-8
defaultHtmlResourceCharacterEncoding = iso-8859-1
defaultXmllResourceCharacterEncoding = utf-8
defaultXHtml10TransitionalResourceCharacterEncoding = utf-8

# Audio resource type property mappings:
resourcetype.audio.audiofileProperty.author = author
resourcetype.audio.audiofileProperty.album = album
resourcetype.audio.audiofileProperty.title = title
resourcetype.audio.audiofileProperty.track = mp3.id3tag.track
resourcetype.audio.audiofileProperty.genre = mp3.id3tag.genre

# Image thumbnail width in pixels:
resourcetype.image.thumbnail.width = 250

# Editor settings:
editor.helpURL = http\://www.usit.uio.no/it/vortex/hjelp/admin/editor
editor.fck.version = 2.6.5
editor.fck.resourcesURL = ${webResources.baseURL}/fckeditor-build-${editor.fck.version}
editor.fck.browseURL = ${appResources.baseURL}/fckeditor/browse

#Autocomplete settings:
autoComplete.appResourceURL = ${appResources.baseURL}/autocomplete

# Stylesheet to insert when converting documents to XHTML:
tidyConvertInsertedCssRef =

# Decorating section:
decorating.templateConfigFile = /vrtx/decorating/config.txt
decorating.supportMultipleTemplates = true
decorating.templatesCollection = /vrtx/decorating/templates
decorating.tidyXhtml = true

decorating.feedComponent.identifier = Feed Fetcher
decorating.feedComponent.cacheTimeoutSeconds = 300
decorating.feedComponent.connectTimeoutSeconds = 5
decorating.feedComponent.readTimeoutSeconds = 5
decorating.feedComponent.maxCachedItems = 100

decorating.includeComponent.identifier = URL Fetcher
decorating.includeComponent.cacheTimeoutSeconds = 300
decorating.includeComponent.connectTimeoutSeconds = 5
decorating.includeComponent.readTimeoutSeconds = 5
decorating.includeComponent.maxCachedItems = 100

decorating.defaultCssComponent.defaultCss = ${themeBaseURL}/view-components.css
# decorating.tableOfContentsComponent.javascript = http://www.uio.no/vrtx/javascript/toc.js

# Commenting section:
commenting.title.enabled = false
commenting.html.enabled = true



documentTemplatesCollection = /vrtx/templates
documentTemplatesParseCategoryTemplates = false
documentTemplatesParseTopTemplates = true


# Resource templates
# Document templates
templates.documentTemplatesBaseUri = /vrtx/doc-templates
templates.documentTemplatesConfigFile = ${templates.documentTemplatesBaseUri}/config.txt
templates.defaultDocumentTemplatesCollection = ${documentTemplatesCollection}

# Folder templates
templates.folderTemplatesBaseUri = /vrtx/folder-templates
templates.folderTemplatesConfigFile = ${templates.folderTemplatesBaseUri}/config.txt
templates.defaultFolderTemplatesCollection = ${templates.folderTemplatesBaseUri}/default

# Set this to false if repository root isn't served by the web service
servesWebRoot = true

tagService.defaultExpression = ${tagService.defaultExpression.${servesWebRoot}}
tagService.defaultExpression.true = /?vrtx=tags&tag=%v
tagService.defaultExpression.false = ./?vrtx=tags&tag=%v&scope=/
tagService.includeScopeInTitle = true

emailAFriend.siteName = ${repositoryID}
emailAFriend.mailServer = localhost
emailAFriend.mailServerPort = 25
emailAFriend.mailServerProtocol = smtp
emailAFriend.concurrencyLimit = 2

# Used by FulltextSearchController
fulltextSearch.hostName = ${repositoryID}
fulltextSearch.displayHostNameInTitle = true

##########################################################################################


##############################################

# jdbcUsername =
# jdbcPassword =
# repositoryDataDirectory =

# Root path to storage directory for indexes
# indexStorageRootPath = 

# Report application errors via email? Specify address below:
# reportErrorsToMailAddress =

# Standard extensions to load (see conf/beans/standard-extensions for
# a list):
#
# FIXME: currently, transformXml and editXml are required for
# the resource type 'managed-xml' to work, should be resolved:
standardExtensions = classpath:/vortikal/beans/standard-extensions/transformXml/transformXml.xml,\
                     classpath:/vortikal/beans/standard-extensions/editXml/editXml.xml

aggregation.limit = 5
aggregation.maxRecursiveDepth = 2

# set to 'structured.' to list structured articles and events
# leave empty for default listing
# DON'T FORGET THE DOT!!! i.e. 'structured.' NOT 'structured'
override.listing.prefix = 