<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" 
                 "http://ibatis.apache.org/dtd/sql-map-2.dtd"> 
                 
<sqlMap>
  
  <sql id="nextVortexResourceId">
    vortex_resource_seq_pk.nextval
  </sql>

  <sql id="nextExtraPropEntryId">
    extra_prop_entry_seq_pk.nextval
  </sql>

  <sql id="nextAclEntryId">
    acl_entry_seq_pk.nextval
  </sql>

  <sql id="nextLockId">
    vortex_lock_seq_pk.nextval
  </sql>

  <sql id="nextChangelogEntryId">
    changelog_entry_seq_pk.nextval
  </sql>

  <sql id="nextTempTableSessionId">
    vortex_tmp_session_id_seq.nextval from dual
  </sql>

  <sql id="destinationUriCopy">
    #destUri# || substr(uri, length(#srcUri#) + 1)
  </sql>

  <sql id="nextVortexCommentId">
    vortex_comment_seq_pk.nextval
  </sql>

  <sql id="destinationDescendantUriMove">
    #destUri# || substr(uri, length(#srcUri#) + 1)
  </sql>
  
  <sql id="binaryDestinationDescendantUriMove">
    #destUri# || substr(value, length(#srcUri#) + 1)
  </sql>
  
  <insert id="insertPropertyEntry" parameterClass="java.util.Map">
    insert into extra_prop_entry
      (extra_prop_entry_id, resource_id, name_space, name, value
        <isNotEmpty property="binaryContent">
          , binary_content, binary_mimetype
        </isNotEmpty>)
    values (<include refid="nextExtraPropEntryId" />, #resourceId#, 
      #namespaceUri#, #name#, #value#
        <isNotEmpty property="binaryContent">
          , #binaryContent,handler=org.springframework.orm.ibatis.support.BlobByteArrayTypeHandler#,
          #binaryMimeType#
        </isNotEmpty>)
  </insert>

  <update id="updateAclInheritedFromByPreviousResourceId" parameterClass="java.util.Map">
    update vortex_resource r1
      set (acl_inherited_from) =
        (select r2.resource_id
          from vortex_resource r2
          where r2.prev_resource_id = r1.acl_inherited_from)
    where (r1.uri = #uri# or r1.uri like #uriWildcard# escape '@')
           and r1.acl_inherited_from is not null
           and r1.acl_inherited_from != #inheritedFrom#
  </update>

  <sql id="listCommentsLimitPrepend">
    select * from (
  </sql>

  <sql id="listCommentsLimitAppend">
    ) where rownum &lt;= #max#
  </sql>


  <sql id="dataReportingLimitPrepend">
    SELECT * FROM (
  </sql>

  <sql id="dataReportingLimitAppend">
    <!--  Oracle query limiting appendix -->
    ) WHERE ROWNUM &lt;= #limit#
  </sql>

</sqlMap>
