<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
                           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
                           http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd">
  <!-- Type handler hooks -->
  <!-- Registry instance: -->
  <bean id="repository.typeHandlerHooksRegistry" class="vtk.repository.hooks.TypeHandlerHooksRegistry" />

  <!-- Abstract bean for registration: -->
  <bean id="repository.typeHandlerHooks.register" abstract="true"
        class="org.springframework.beans.factory.config.MethodInvokingBean">
    <property name="targetObject" ref="repository.typeHandlerHooksRegistry" />
    <property name="targetMethod" value="register" />
  </bean>

  <!-- Abstract bean config for TypeHandlerHooks beans
    extending DefaultTypeHandlerHooks. Sets contentStore and content
    RepresentationRegistry properties: -->
  <bean id="abstractTypeHandlerHooks" abstract="true">
    <property name="contentStore" ref="${repository.contentStore}" />
    <property name="contentRepresentationRegistry" ref="contentRepresentationRegistry" />
  </bean>

  <bean id="repositoryAware" abstract="true">
    <description>
      Simple parent template for repository aware controllers. Just
      saves a couple of lines for each
      controller having a repository
      property, that's just about all of them
    </description>
    <property name="repository" ref="repository" />
  </bean>

  <!-- Transaction manager for database access -->
  <bean id="repository.transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
    <property name="dataSource" ref="repository.dataSource" />
  </bean>

  <!-- Spring annotation-driven transaction management magic using CGLIB. -->
  <tx:annotation-driven transaction-manager="repository.transactionManager"
                        proxy-target-class="true" order="1000" />

  <!-- AOP pointcut for all transactional methods. This is referenced by
       various interceptor throughout, which need to hook on to these methods. -->
  <aop:config proxy-target-class="true">
    <aop:pointcut id="transactionalAnnotationPointcut"
                  expression="@annotation(org.springframework.transaction.annotation.Transactional)"/>
  </aop:config>

  <!-- Default data source setup -->
  <bean id="repository.dataSource" class="org.apache.commons.dbcp2.BasicDataSource" destroy-method="close">
    <property name="driverClassName" value="${databaseDriver}" />
    <property name="maxTotal" value="${maxDatabaseConnections}" />
    <property name="url" value="${databaseURL}" />
    <property name="username" value="${jdbcUsername}" />
    <property name="password" value="${jdbcPassword}" />
    <property name="defaultAutoCommit" value="false" />
  </bean>

  <!-- SqlMap setup for MYBATIS Database Layer -->
  <bean id="repository.sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
    <property name="dataSource" ref="repository.dataSource" />
    <property name="configLocation" value="classpath:/vtk/repository/store/db/ibatis/${sqlDialect}-sql-map-config.xml" />
    <property name="typeHandlers">
      <list>
        <bean class="vtk.repository.store.db.ibatis.UserPrincipalTypeHandlerCallback">
          <property name="principalFactory" ref="principalFactory" />
        </bean>
      </list>
    </property>
  </bean>

  <bean id="repository.sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
    <constructor-arg name="sqlSessionFactory" ref="repository.sqlSessionFactory" />
  </bean>

  <bean id="repository.batchSqlSession" class="org.mybatis.spring.SqlSessionTemplate">
    <constructor-arg name="sqlSessionFactory" ref="repository.sqlSessionFactory" />
    <constructor-arg name="executorType" value="BATCH" />
  </bean>

  <!-- Override MYBATIS SQL map statement names in this map (should generally not be necessary): -->
  <bean id="repository.statementMappings" class="java.util.HashMap">
    <constructor-arg>
      <map>
      </map>
    </constructor-arg>
  </bean>

  <bean id="repository.abstractSqlMapDao" abstract="true">
    <property name="sqlSession" ref="repository.sqlSession" />
    <property name="batchSqlSession" ref="repository.batchSqlSession" />
  </bean>

  <bean id="repository.sqlMapDao" class="vtk.repository.store.db.SqlMapDataAccessor"
        parent="repository.abstractSqlMapDao">
    <property name="sqlMaps" ref="repository.statementMappings" />
    <property name="optimizedAclCopySupported" value="${optimizedAclCopySupported}" />
    <property name="resourceTypeTree" ref="resourceTypeTree" />
    <property name="principalFactory" ref="principalFactory" />
    <property name="valueFactory" ref="valueFactory" />
    <property name="repositoryId" value="${repositoryID}" />
  </bean>

  <bean id="repository.fsContentStore" class="vtk.repository.store.fs.FileSystemContentStore">
    <property name="urlEncodeFileNames" value="${urlEncodeFileNames}" />
    <property name="repositoryDataDirectory" value="${repositoryDataDirectory}" />
    <property name="repositoryTrashCanDirectory" value="${repositoryTrashCanDirectory}" />
  </bean>

  <bean id="repository.indexDao" class="vtk.repository.store.db.SqlMapIndexDao"
        parent="repository.abstractSqlMapDao">
    <property name="sqlMaps" ref="repository.statementMappings" />
    <property name="sqlMapDataAccessor" ref="repository.sqlMapDao" />
    <property name="principalFactory" ref="principalFactory" />
  </bean>

  <bean id="repository.changeLogDAO" class="vtk.repository.store.db.SqlMapChangeLogDao"
        parent="repository.abstractSqlMapDao">
    <property name="sqlMaps" ref="repository.statementMappings" />
  </bean>

  <bean id="repository.cache" class="vtk.repository.store.Cache">
    <property name="maxItems" value="${resourceCacheSize}" />
    <property name="wrappedAccessor" ref="${repository.dao}" />
  </bean>

  <bean parent="metrics.gaugeRegistration">
    <property name="arguments">
      <list>
        <value>repository.cache.size</value>
        <value>context.getBean("repository.cache").size()</value>
      </list>
    </property>
  </bean>

  <bean id="repository.defaultRevisionStore" class="vtk.repository.store.DefaultRevisionStore"
        parent="repository.abstractSqlMapDao">
    <property name="sqlMaps" ref="repository.statementMappings" />
    <property name="principalFactory" ref="principalFactory" />
    <property name="revisionDirectory" value="${repositoryRevisionDirectory}" />
    <property name="tempDir" value="${repository.tempDir}" />
  </bean>

  <bean id="repository.sqlMapCommentDao" class="vtk.repository.store.db.SqlMapCommentDAO"
        parent="repository.abstractSqlMapDao">
    <property name="sqlMaps" ref="repository.statementMappings" />
  </bean>

  <bean id="repositoryResourceHelper" class="vtk.repository.RepositoryResourceHelper">
    <property name="authorizationManager" ref="authorizationManager" />
    <property name="resourceTypeTree" ref="resourceTypeTree" />
  </bean>

  <!-- Picks up ContentFactory implementations from bean context: -->
  <bean id="contentRepresentationRegistry" class="vtk.repository.content.ContentRepresentationRegistry" />

  <bean id="authorizationManager" class="vtk.repository.AuthorizationManager">
    <property name="principalManager" ref="principalManager" />
    <property name="roleManager" ref="roleManager" />
    <property name="dao" ref="${repositoryBackend}" />
    <property name="permissionBlacklist" ref="repository.acl.blacklist" />
    <property name="readOnlyRootPaths">
      <bean class="vtk.context.CSVSetFactoryBean">
        <property name="csvList" value="#{'${repositoryReadOnly}'=='true' ? '/' : '${repositoryReadOnlyRoots}'}" />
      </bean>
    </property>
  </bean>

  <bean id="repository.archiver" class="vtk.util.repository.ResourceArchiver">
    <property name="repository" ref="repository" />
    <property name="resourceTypeTree" ref="resourceTypeTree" />
    <property name="tempDir" value="${archiver.tempDir}" />
    <property name="principalFactory" ref="principalFactory" />
    <property name="legacyPrincipalMappings" ref="repository.archiver.legacyPrincipalMappings" />
    <property name="legacyActionMappings" ref="repository.archiver.legacyActionMappings" />
  </bean>

  <bean id="repository.archiver.legacyPrincipalMappings" class="vtk.context.JSONFactoryBean">
    <constructor-arg value="${archiver.legacyPrincipalMappings}" />
  </bean>

  <bean id="repository.archiver.legacyActionMappings" class="vtk.context.JSONFactoryBean">
    <constructor-arg value="${archiver.legacyActionMappings}" />
  </bean>

  <bean id="repository.acl.blacklist" class="org.springframework.beans.factory.config.MapFactoryBean">
    <property name="sourceMap">
      <map key-type="vtk.repository.Privilege">
        <entry key="ALL" value-ref="repository.acl.blacklist.all" />
        <entry key="READ_WRITE" value-ref="repository.acl.blacklist.readWrite" />
        <entry key="READ_WRITE_UNPUBLISHED" value-ref="repository.acl.blacklist.readWrite" />
        <entry key="ADD_COMMENT" value-ref="repository.acl.blacklist.addComment" />
        <!-- <entry key="BIND_TEMPLATE" value-ref="repository.acl.blacklist.bindTemplate" /> -->
        <entry key="READ" value-ref="repository.acl.blacklist.read" />
        <entry key="READ_PROCESSED" value-ref="repository.acl.blacklist.readProcessed" />
      </map>
    </property>
  </bean>

  <bean id="repository.acl.blacklist.all" class="vtk.context.CSVListFactoryBean">
    <property name="csvList" value="${permissions.blacklist.all}" />
    <property name="trim" value="true" />
  </bean>

  <bean id="repository.acl.blacklist.readWrite" class="vtk.context.CSVListFactoryBean">
    <property name="csvList" value="${permissions.blacklist.read-write}" />
    <property name="trim" value="true" />
  </bean>

  <bean id="repository.acl.blacklist.addComment" class="vtk.context.CSVListFactoryBean">
    <property name="csvList" value="${permissions.blacklist.add-comment}" />
    <property name="trim" value="true" />
  </bean>

  <bean id="repository.acl.blacklist.createWithAcl" class="vtk.context.CSVListFactoryBean">
    <property name="csvList" value="${permissions.blacklist.create-with-acl}" />
    <property name="trim" value="true" />
  </bean>

  <bean id="repository.acl.blacklist.read" class="vtk.context.CSVListFactoryBean">
    <property name="csvList" value="${permissions.blacklist.read}" />
    <property name="trim" value="true" />
  </bean>

  <bean id="repository.acl.blacklist.readProcessed" class="vtk.context.CSVListFactoryBean">
    <property name="csvList" value="${permissions.blacklist.read-processed}" />
    <property name="trim" value="true" />
  </bean>

  <!-- !!!!!!! TODO get rid of this and/or move out of this config file: -->
  <!-- ## Will search across multiple hosts when configured to do so ## -->
  <bean id="multiHostSearcher" class="vtk.repository.MultiHostSearcher" >
    <property name="enabled" value="false" />
  </bean>

</beans>
