getDescription() {
    return "Finds resources below a given path";
}

getUsage() {
    return "repo find <uri:path>";
}

void execute(context, args, out) {

    repo = context.get("context").getBean("repository");
    token = context.get("context").getBean("writeAllToken");

    uri = args.get("uri");

    if (!repo.exists(token, uri)) {
        out.println("No such resource");
        return;
    }
    r = repo.retrieve(token, uri, true);
    traverse(r, repo, token, out);
}

traverse(r, repo, token, out) {
    out.println(r.getURI());

    if (r.isCollection()) {
        for (c: repo.listChildren(token, r.getURI(), true)) {
            traverse(c, repo, token, out);
        }
    } 
}



