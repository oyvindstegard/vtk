<?xml version="1.0" encoding="utf-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd">


  <!-- List of cluster aware components. The list is populated during
       application context initialization. -->
  <bean id="cluster.components" class="java.util.ArrayList" />

  <!-- Common thread pool for asynchronous dispatching of messages from cluster to app. -->
  <bean id="cluster.asyncMessageExecutorService" class="java.util.concurrent.Executors"
        factory-method="newFixedThreadPool"
        destroy-method="shutdownNow">
    <constructor-arg value="4"/>
    <constructor-arg>
      <bean class="org.springframework.scheduling.concurrent.CustomizableThreadFactory">
        <property name="threadNamePrefix" value="cluster-to-app-message-"/>
      </bean>
    </constructor-arg>
  </bean>

  <!-- Abstract bean which should be used to register ClusterAware components throughout the bean context. -->
  <bean id="cluster.componentRegistration" class="vtk.cluster.ClusterComponentRegistration" abstract="true">
    <constructor-arg ref="cluster.asyncMessageExecutorService"/>
    <constructor-arg ref="cluster.components" />
  </bean>

  <bean parent="cluster.componentRegistration">
    <property name="component" ref="systemIndex" />
  </bean>

  <bean parent="cluster.componentRegistration">
    <property name="component" ref="secondarySystemIndex"/>
  </bean>
  
  <bean parent="cluster.componentRegistration">
    <property name="component" ref="authorizationManager"/>
    <property name="async" value="false"/>
  </bean>

  <bean parent="cluster.componentRegistration">
    <property name="component" ref="repository.lockingCacheControlWrapper"/>
  </bean>

  <!-- Default no-op cluster manager bean. -->  
  <bean id="cluster.manager" class="vtk.cluster.DefaultClusterManager">
    <constructor-arg>
      <ref bean="cluster.components"/>
    </constructor-arg>
  </bean>


  <!-- 
       Cluster Status service:
       
       GET ${cluster.statusURL}/master => if (master) 200 OK else 404 Not Found

       GET ${cluster.statusURL}/node => if (draining) 404 Not Found else 200 OK

  -->

  <bean id="cluster.statusService" class="vtk.web.service.ServiceImpl">
    <property name="order" value="-96000" />
    <property name="assertions">
      <bean class="vtk.web.service.RequestURIRegexpAssertion">
        <property name="pattern" value="${cluster.statusURL}" />
      </bean>
    </property>
    <property name="handler" ref="cluster.statusController" />
  </bean>

  <bean id="cluster.statusController" class="vtk.web.ClusterStatus" />
  
  <bean parent="cluster.componentRegistration">
    <property name="component" ref="cluster.statusController" />
    <property name="async" value="false" />
  </bean>

  <bean parent="vtk.globalHeaders.referenceDataProvider">
    <property name="arguments" ref="cluster.statusController" />
  </bean>

</beans>
