<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd">

  <bean id="decorating.serviceFilter" class="vtk.web.decorating.DecoratingServiceFilter">
    <constructor-arg name="htmlParser" ref="decorating.htmlParser" />
    <constructor-arg name="filters" ref="decorating.htmlParseFilters" />
    <constructor-arg name="resolver" ref="decorating.decorationResolver" />
    <constructor-arg name="componentResolver" ref="decorating.defaultComponentResolver" />
    <constructor-arg name="preventDecoratingParameter" value="x-prevent-decorating" />
    <constructor-arg name="staticHeaders">
      <map>
      </map>
    </constructor-arg>
  </bean>

  <bean id="decorating.htmlParseFilters"
        class="org.springframework.beans.factory.config.ListFactoryBean">
    <property name="sourceList">
      <list>
        <ref bean="linkCheck.htmlFilter" />
        <!--ref bean="decorating.nodeLabelFilter" /-->
        <ref bean="decorating.ssiNodeFilter" />
      </list>
    </property>
  </bean>

  <bean id="decorating.ssiNodeFilter" class="vtk.web.decorating.ComponentInvokingNodeFilter">
    <property name="componentResolver">
      <bean class="vtk.web.decorating.AggregatedComponentResolver">
      <constructor-arg>
        <list>
          <ref bean="decorating.documentComponentResolver" />
          <!--ref bean="decorating.userDefinedComponentResolver" /-->
        </list>
      </constructor-arg>
      </bean>
    </property>
    <property name="ssiDirectiveComponentMap">
      <map>
        <entry key="include" value-ref="decorating.includeComponent" />
      </map>
    </property>
    <property name="contentComponentParser" ref="decorating.dollarSyntaxTemplateParser" />
    <property name="parseAttributes" value="true" />
  </bean>

  <bean id="decorating.decorationResolver"
        class="vtk.web.decorating.ConfigurableDecorationResolver"
        parent="repositoryAware">
    <property name="config" value="${decorating.templateConfigFile}" />
    <property name="supportMultipleTemplates" value="${decorating.supportMultipleTemplates}" />
    <property name="templateManager" ref="decorating.templateManager" />
    <property name="decorationConfiguration" ref="decorating.configurationPropertiesFile" />
    <property name="parseableContentPropDef" ref="containsSSIDirectivesPropDef" />
    <property name="localeResolver" ref="viewServiceResourceAwareLocaleResolver" />
    <property name="maxDocumentSize" value="${decorating.maxDocumentSize}" />
  </bean>

  <bean id="decorating.configurationPropertiesFile"
        class="vtk.util.repository.PropertiesResource">
    <property name="repository" ref="repository" />
    <property name="uri" value="${decorating.templateConfigFile}" />
    <property name="lazyInit" value="false" />
  </bean>

  <bean id="decorating.templateConfigPropsRefreshTrigger"
        class="vtk.util.repository.MethodInvokingRepositoryEventTrigger">
    <property name="repository" ref="repository" />
    <property name="uri" value="${decorating.templateConfigFile}" />
    <property name="targetObject" ref="decorating.configurationPropertiesFile" />
    <property name="method" value="load" />
  </bean>

  <bean id="decorating.templateConfigRefreshTrigger"
        class="vtk.util.repository.MethodInvokingRepositoryEventTrigger">
    <property name="repository" ref="repository" />
    <property name="uri" value="${decorating.templateConfigFile}" />
    <property name="targetObject" ref="decorating.decorationResolver" />
    <property name="method" value="loadConfig" />
  </bean>

  <bean id="decorating.templateManager" class="vtk.web.decorating.CollectionTemplateManager">
    <property name="repository" ref="repository" />
    <property name="collectionName" value="${decorating.templatesCollection}" />
    <property name="templateFactory" ref="decorating.defaultTemplateFactory" />
    <property name="templateResourceType" ref="htmlResourceTypeDefinition" />
  </bean>

  <bean id="decorating.templateCollectionRefreshTrigger"
        class="vtk.util.repository.MethodInvokingRepositoryEventTrigger">
    <property name="repository" ref="repository" />
    <property name="uriPattern" value="${decorating.templatesCollection}/.*\.(html|template|tmp)$" />
    <property name="targetObject" ref="decorating.templateManager" />
    <property name="method" value="load" />
  </bean>


  <bean id="decorating.defaultTemplateFactory"
            class="vtk.web.decorating.DelegatingTemplateFactory">
    <property name="templateFactoryMap">
      <map>
	<!--entry key="\.template$" value-ref="decorating.htmlParserTemplateFactory" /-->
	<entry key="\.html$" value-ref="decorating.dollarSyntaxTemplateFactory" />
	<entry key="\.tmp$" value-ref="decorating.dynamicTemplateFactory" />
	<entry key="\.tpl$" value-ref="decorating.dynamicTemplateFactory" />
      </map>
    </property>
  </bean>

  <bean id="decorating.dollarSyntaxTemplateFactory"
            class="vtk.web.decorating.TextualDecoratorTemplateFactory">
    <property name="parser" ref="decorating.dollarSyntaxTemplateParser" />
    <property name="componentResolver" ref="decorating.defaultComponentResolver" />
  </bean>

  <bean id="decorating.dollarSyntaxTemplateParser" class="vtk.web.decorating.DollarSyntaxComponentParser">
  </bean>

  <bean name="decorating.defaultComponentResolver"
        class="vtk.web.decorating.AggregatedComponentResolver">
    <constructor-arg>
      <list>
        <!-- components defined in bean context with certain namespaces: -->
        <ref bean="decorating.builtinComponentResolver" />
        <!-- user-defined (dynamic) components: -->
        <ref bean="decorating.userDefinedComponentResolver" />
      </list>
    </constructor-arg>
  </bean>

  <bean id="decorating.builtinComponentResolver" 
        class="vtk.web.decorating.BeanContextComponentResolver">
    <property name="availableComponentNamespaces"
              ref="decorating.defaultBuiltinComponentNamespaces" />
  </bean>

  <bean id="decorating.defaultBuiltinComponentNamespaces" class="java.util.HashSet">
    <constructor-arg>
      <bean class="vtk.context.JSONFactoryBean">
        <constructor-arg value="${decorating.builtinNamespaces}" />
      </bean>
    </constructor-arg>
  </bean>

  <bean id="decorating.documentComponentResolver" class="vtk.web.decorating.AggregatedComponentResolver">
    <constructor-arg>
      <list>
        <ref bean="decorating.builtinDocumentComponentResolver" />
        <ref bean="decorating.userDefinedComponentResolver" />
      </list>
    </constructor-arg>
  </bean>

  <bean name="decorating.builtinDocumentComponentResolver"
        class="vtk.web.decorating.BeanContextComponentResolver">
    <property name="availableComponentNamespaces"
              ref="decorating.builtinDocumentComponentNamespaces" />
  </bean>


  <bean id="decorating.builtinDocumentComponentNamespaces"
        class="org.springframework.beans.factory.config.SetFactoryBean">
    <property name="sourceSet">
      <set>
        <ref bean="decorating.resourceNamespace" />
        <ref bean="decorating.includeNamespace" />
        <ref bean="decorating.cssNamespace" />
      </set>
    </property>
  </bean>

  <bean id="decorating.plainViewService" class="vtk.web.service.ServiceImpl">
    <property name="parent" ref="webService" />
    <property name="assertions">
      <list>
        <bean class="vtk.web.service.RequestParameterAssertion">
          <property name="parameterName" value="x-decorating-mode" />
          <property name="parameterValue" value="plain" />
        </bean>
      </list>
    </property>
    <property name="handler" ref="decorating.plainViewHandler" />
    <property name="attributes">
      <map>
        <entry key="remove-caching" value="true" />
      </map>
    </property>
  </bean>

  <bean id="decorating.plainViewHandler" class="vtk.web.display.ForwardingController">
    <property name="service" ref="viewService" />
    <property name="preservedRequestParameters">
      <set>
        <value>revision</value>
        <value>vrtxPreviewUnpublished</value>
      </set>
    </property>
    <property name="requestParameters">
      <map>
        <entry key="x-prevent-decorating" value="true" />
      </map>
    </property>
  </bean>


  <bean id="decorating.viewUnpublishedService" parent="decorating.plainViewService">
    <property name="assertions">
      <list>
        <bean class="vtk.web.service.RequestParameterAssertion">
          <property name="parameterName" value="x-decorating-mode" />
          <property name="parameterValue" value="view-unpublished" />
        </bean>
      </list>
    </property>
    <property name="handler" ref="decorating.viewUnpublishedHandler" />
  </bean>

  <bean id="decorating.viewUnpublishedHandler" parent="decorating.plainViewHandler">
    <property name="requestParameters">
      <map>
        <!--entry key="x-prevent-decorating" value="true" /-->
        <entry key="vrtxPreviewUnpublished" value="true" />
      </map>
    </property>
  </bean>

  <bean id="listDecoratorComponentsService" class="vtk.web.service.ServiceImpl">
    <property name="parent" ref="webService" />
    <property name="order" value="-200" />
    <property name="categories">
      <set>
        <value>plaintextEditTooltipService</value>
      </set>
    </property>
    <property name="assertions">
      <list>
        <bean class="vtk.web.service.ResourceTypeAssertion" parent="repositoryAware">
          <property name="resourceTypeDefinition" ref="htmlResourceTypeDefinition" />
        </bean>
        <bean class="vtk.web.service.ResourceURIRegexpAssertion">
          <property name="pattern" value="^${decorating.templatesCollection}/.*" />
        </bean>
        <bean class="vtk.web.service.RequestParameterAssertion">
          <property name="parameterName" value="action" />
          <property name="parameterValue" value="list-decorator-components" />
        </bean>
      </list>
    </property>
    <property name="handler" ref="listDecoratorComponentsHandler" />
    <property name="authenticationChallenge" ref="${webAuthenticationChallenge}" />
  </bean>

  <bean id="listDocumentsComponentsService" class="vtk.web.service.ServiceImpl">
    <property name="parent" ref="webService" />
    <property name="order" value="-200" />
    <property name="categories">
      <set>
        <value>plaintextEditTooltipService</value>
      </set>
    </property>
    <property name="assertions">
      <list>
        <bean class="vtk.web.service.ResourceTypeAssertion" parent="repositoryAware">
          <property name="resourceTypeDefinition" ref="htmlResourceTypeDefinition" />
        </bean>
        <bean class="vtk.web.service.ResourceURIRegexpAssertion">
          <property name="pattern" value="^${decorating.templatesCollection}/.*" />
          <property name="invert" value="true" />
        </bean>
        <bean class="vtk.web.service.RequestParameterAssertion">
          <property name="parameterName" value="action" />
          <property name="parameterValue" value="list-decorator-components" />
        </bean>
      </list>
    </property>
    <property name="handler" ref="listDocumentComponentsHandler" />
  </bean>

  <bean id="jsonDocumentsComponentsService" class="vtk.web.service.ServiceImpl">
    <property name="parent" ref="webService" />
    <property name="order" value="-200" />
    <property name="categories">
      <set>
        <value>jsonEditTooltipService</value>
      </set>
    </property>
    <property name="assertions">
      <list>
        <bean class="vtk.web.service.ResourceTypeAssertion"
              parent="repositoryAware">
          <property name="resourceTypeDefinition" ref="json.managedObjectResourceType" />
        </bean>
        <bean class="vtk.web.service.ResourceURIRegexpAssertion">
          <property name="pattern" value="^${decorating.templatesCollection}/.*" />
          <property name="invert" value="true" />
        </bean>
        <bean class="vtk.web.service.RequestParameterAssertion">
          <property name="parameterName" value="action" />
          <property name="parameterValue" value="list-decorator-components" />
        </bean>
      </list>
    </property>
    <property name="handler" ref="listDocumentComponentsHandler" />
  </bean>

  <bean name="listDecoratorComponentsHandler" class="vtk.web.display.MethodInvokingController">
    <property name="targetObject" ref="decorating.defaultComponentResolver" />
    <property name="targetMethod" value="listComponents" />
    <property name="modelName" value="componentList" />
    <property name="viewName" value="listDecoratorComponents" />
  </bean>

  <bean name="listDocumentComponentsHandler" class="vtk.web.display.MethodInvokingController">
    <property name="targetObject" ref="decorating.documentComponentResolver" />
    <property name="targetMethod" value="listComponents" />
    <property name="modelName" value="componentList" />
    <property name="viewName" value="listDocumentDecoratorComponents" />
  </bean>
  

  <bean id="listDecoratorComponentsViewResolver"
        class="vtk.web.decorating.MappingViewResolver">
    <property name="views">
      <map>
        <entry key="listDecoratorComponents" value-ref="listDecoratorComponentsView" />
        <entry key="listDocumentDecoratorComponents" value-ref="listDocumentDecoratorComponentsView" />
      </map>
    </property>
  </bean>

  <bean id="listDecoratorComponentsView" parent="freemarkerView">
    <property name="url" value="pages/list-decorator-components.ftl" />
  </bean>

  <bean id="listDocumentDecoratorComponentsView" parent="listDecoratorComponentsView">
    <property name="attributesMap">
      <map>
        <entry key="hiddenComponents">
          <bean id="decorating.hiddenComponents" class="vtk.context.CSVSetFactoryBean">
            <property name="csvList" value="${decorating.hiddenComponents}" />
          </bean>
        </entry>
      </map>
    </property>
  </bean>
   
  <!-- New title resolver: -->
  <bean id="decorating.titleResolver" class="vtk.web.TitleResolverImpl"
          parent="repositoryAware">
    <property name="configPath" value="${decorating.titleResolver.config}" />
    <property name="resourceTypeTree" ref="resourceTypeTree" />
    <property name="fallbackTemplate" value="${decorating.titleResolver.fallbackTemplate}" />
  </bean>

  <bean id="decorating.titleResolver.configRefreshTrigger"
        class="vtk.util.repository.MethodInvokingRepositoryEventTrigger">
    <property name="repository" ref="repository" />
    <property name="uri" value="${decorating.titleResolver.config}" />
    <property name="targetObject" ref="decorating.titleResolver" />
    <property name="method" value="loadConfig" />
  </bean>

</beans>
