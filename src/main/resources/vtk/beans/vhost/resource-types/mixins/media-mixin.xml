<?xml version="1.0" encoding="utf-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd">

  <bean id="mediaMixinResourceTypeDef" class="vtk.repository.resourcetype.MixinResourceTypeDefinitionImpl">
    <property name="name" value="media-mixin" />
    <property name="namespace" ref="DEFAULT_NAMESPACE" />
    <property name="propertyTypeDefinitions">
      <list>
        <ref bean="thumbnailPropDef" />
        <ref bean="mediaMetadataStatusPropDef" />
        <ref bean="mediaHeightPropDef" />
        <ref bean="mediaWidthPropDef" />
        <ref bean="mediaDurationPropDef" />
      </list>
    </property>
  </bean>

  <bean id="thumbnailPropDef" class="vtk.repository.resourcetype.PropertyTypeDefinitionImpl" parent="abstractPropDef">
    <property name="name" value="thumbnail" />
    <property name="type" value="BINARY" />
    <property name="protectionLevel" ref="PROTECTION_LEVEL_ACL_WRITE" />
    <property name="mandatory" value="false" />
  </bean>

  <bean id="mediaMetadataStatusPropDef" class="vtk.repository.resourcetype.PropertyTypeDefinitionImpl"
    parent="abstractPropDef">
    <property name="name" value="media-metadata-status" />
    <property name="type" value="STRING" />
    <property name="multiple" value="false" />
    <property name="protectionLevel" ref="PROTECTION_LEVEL_ACL_WRITE" />
    <property name="mandatory" value="false" />
    <property name="propertyEvaluator">
      <bean id="mediaMetadataStatusEvaluator" class="vtk.repository.resourcetype.property.MediaMetadataStatusPropertyEvaluator" />
    </property>

    <!-- XXX Is a vocabulary for this property necessary, and does it makes sense when
         it contains image specific values ?
         media-mixin type should be more general, no ? -->
    <property name="vocabulary">
      <bean class="vtk.repository.resourcetype.ValueVocabulary">
        <!-- XXX commentsEnabled !?: -->
        <property name="messageSourceBaseName" value="vtk.beans.vhost.resource-types.properties.commentsEnabled" />
        <property name="type" value="STRING" />
        <property name="values">
          <list>
            <bean class="vtk.repository.resourcetype.Value">
              <constructor-arg value="GENERATE" />
              <constructor-arg ref="TYPE_STRING" />
            </bean>
            <bean class="vtk.repository.resourcetype.Value">
              <constructor-arg value="IMAGE_SIZE_EXCEEDS_LIMIT" />
              <constructor-arg ref="TYPE_STRING" />
            </bean>
            <bean class="vtk.repository.resourcetype.Value">
              <constructor-arg value="MEMORY_USAGE_EXCEEDS_LIMIT" />
              <constructor-arg ref="TYPE_STRING" />
            </bean>
            <bean class="vtk.repository.resourcetype.Value">
              <constructor-arg value="UNSUPPORTED_FORMAT" />
              <constructor-arg ref="TYPE_STRING" />
            </bean>
            <bean class="vtk.repository.resourcetype.Value">
              <constructor-arg value="TOO_SMALL_FOR_THUMBNAIL" />
              <constructor-arg ref="TYPE_STRING" />
            </bean>
            <!-- XXX legacy value should be removed, but kept for compat. for now: -->
            <bean class="vtk.repository.resourcetype.Value">
              <constructor-arg value="CONFIGURED_NOT_TO_SCALE_UP" />
              <constructor-arg ref="TYPE_STRING" />
            </bean>
            <bean class="vtk.repository.resourcetype.Value">
              <constructor-arg value="CORRUPT" />
              <constructor-arg ref="TYPE_STRING" />
            </bean>
          </list>
        </property>
      </bean>
    </property>
  </bean>

  <bean id="mediaHeightPropDef" class="vtk.repository.resourcetype.PropertyTypeDefinitionImpl" parent="abstractPropDef">
    <property name="name" value="pixelHeight" />
    <property name="type" value="INT" />
    <property name="protectionLevel" ref="PROTECTION_LEVEL_ACL_WRITE" />
    <property name="mandatory" value="false" />
  </bean>

  <bean id="mediaWidthPropDef" class="vtk.repository.resourcetype.PropertyTypeDefinitionImpl" parent="abstractPropDef">
    <property name="name" value="pixelWidth" />
    <property name="type" value="INT" />
    <property name="protectionLevel" ref="PROTECTION_LEVEL_ACL_WRITE" />
    <property name="mandatory" value="false" />
  </bean>

  <bean id="mediaDurationPropDef" class="vtk.repository.resourcetype.PropertyTypeDefinitionImpl" parent="abstractPropDef">
    <property name="name" value="duration" />
    <property name="type" value="INT" />
    <property name="protectionLevel" ref="PROTECTION_LEVEL_ACL_WRITE" />
    <property name="mandatory" value="false" />
  </bean>

  <!-- videoStreamablePercentComplete property of resource type videoref -->
  <!-- XXX: This is a placholder until a better solution is made. PropertyDefPointers for aboutItems (about.ftl)
  is a possible solution. -->
  <bean id="videoref.streamablePercentCompletePropDef" class="vtk.repository.resourcetype.PropertyTypeDefinitionImpl" parent="abstractPropDef">
    <property name="name" value="videoStreamablePercentComplete" />
    <property name="namespace" ref="DEFAULT_NAMESPACE" />
    <property name="type" value="INT" />
  </bean>

  <bean id="videoref.typePropDef" class="vtk.repository.resourcetype.PropertyTypeDefinitionImpl" parent="abstractPropDef">
    <property name="name" value="videoref-type" />
    <property name="namespace" ref="DEFAULT_NAMESPACE" />
    <property name="type" value="STRING" />
  </bean>

  <bean id="resourceIsNotLectureVideoRefAssertion" class="vtk.web.service.ResourcePropertyAssertion">
    <property name="namespace" ref="DEFAULT_NAMESPACE" />
    <property name="name" value="videoref-type" />
    <property name="value" value="lecture-videoref" />
    <property name="invert" value="true" />
  </bean>

</beans>
