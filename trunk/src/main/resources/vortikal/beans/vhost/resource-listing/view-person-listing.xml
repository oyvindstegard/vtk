<?xml version="1.0" encoding="utf-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd">

  <bean id="personListing.viewService" class="org.vortikal.web.service.ServiceImpl">
    <property name="parent" ref="collectionListing.viewService" />
    <property name="order" value="0" />
    <property name="assertions">
      <list>
        <ref bean="resourceIsPersonListing" />
      </list>
    </property>
    <property name="handler" ref="personListing.handler" />
    <property name="serviceNameProvider" ref="collectionListing.viewService.serviceNameProvider" />
  </bean>

  <bean id="personListing.handler" class="org.vortikal.web.display.collection.CollectionListingController" parent="collectionListing.abstract.handler">
    <property name="searchComponents">
      <list>
        <ref bean="personListing.searchComponent" />
      </list>
    </property>
    <property name="viewName" value="personListing.view" />
  </bean>

  <bean id="personListing.searchComponent" parent="collectionListing.searchComponent">
    <property name="name" value="personListing.defaultPerson" />
    <property name="listingUriQueryBuilder" ref="collection.defaultRecursiveListingUriQueryBuilder" />
    <property name="queryBuilders">
      <list>
        <bean parent="queryStringParser">
          <property name="queryString" value="(type IN person) AND (resource:surname exists AND resource:firstName exists)" />
        </bean>
      </list>
    </property>
    <property name="searchSorting" ref="personListing.searchSorting" />
    <property name="configurablePropertySelectPointers" ref="personListing.configurablePropertySelectPointersList" />
  </bean>

  <bean id="personListing.searchSorting" parent="collectionListing.searchSorting">
    <property name="sortOrderPropDefPointers">
      <list>
        <value>resource:surname</value>
        <value>resource:firstName</value>
      </list>
    </property>
  </bean>

  <bean id="personListing.viewResolver" parent="decoratorViewResolver">
    <property name="views">
      <map>
        <entry key="personListing.view" value-ref="personListing.view" />
      </map>
    </property>
  </bean>

  <bean id="personListing.view" parent="freemarkerView">
    <property name="url" value="pages/view-collection-listing.ftl" />
    <property name="referenceDataProviders">
      <list>
        <ref bean="resourceContextProvider" />
      </list>
    </property>
  </bean>

  <bean id="personListing.feedService" parent="collectionListing.feedService">
    <property name="order" value="-2" />
    <property name="assertions">
      <list>
        <ref bean="resourceIsPersonListing" />
        <ref bean="feedParameterSetAssertion" />
      </list>
    </property>
    <property name="handler" ref="personListing.feedHandler" />
  </bean>

  <bean id="personListing.feedHandler" parent="collectionListing.feedHandler">
    <property name="feedGenerator" ref="personListing.atomFeedGenerator" />
  </bean>

  <bean id="personListing.atomFeedGenerator" class="org.vortikal.web.display.collection.CollectionListingAtomFeedGenerator"
    parent="atomFeedGenerator">
    <property name="searchComponent" ref="personListing.searchComponent" />
  </bean>

  <bean id="personListing.configurablePropertySelectPointersList" class="java.util.ArrayList">
    <constructor-arg>
      <list>
        <value>resource:username</value>
        <value>resource:firstName</value>
        <value>resource:surname</value>
        <value>resource:position</value>
        <value>resource:phone</value>
        <value>resource:mobile</value>
        <value>resource:email</value>
        <value>resource:picture</value>
        <value>resource:postalAddress</value>
        <value>resource:visitingAddress</value>
        <value>resource:alternativeVisitingAddress</value>
        <value>resource:alternativeCellPhone</value>
        <value>resource:room</value>
        <value>resource:availableHours</value>
        <value>title</value>
        <value>tags</value>
        <value>lastModified</value>
        <value>contentLocale</value>
        <value>publish-date</value>
        <value>resource:affiliations</value>
      </list>
    </constructor-arg>
  </bean>

</beans>
