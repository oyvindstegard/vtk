<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans.dtd">

<beans>


  <!-- ************************** -->
  <!-- THE WEB SERVICE TREE       -->
  <!-- Web browser based services -->
  <!-- ************************** -->

  <bean id="webService" class="org.vortikal.web.service.ServiceImpl">
    <property name="order" value="0" />
    <property name="assertions">
      <list>
        <ref bean="webHostNameAssertion" />
        <ref bean="webProtocolAssertion" />
        <ref bean="webPortAssertion" />
      </list>
    </property>

    <property name="handlerInterceptors">
      <list>
        <bean id="webServiceInterceptor"
              class="org.vortikal.web.ReferenceDataProvidingHandlerInterceptor">
          <description>
            Interceptor on the web-based services, in order to provide a
            global 'message' in all the MVC models that are produced by
            the handlers.
          </description>
          <property name="providers">
            <bean id="repositoryReadOnlyMessageProvider"
                  class="org.vortikal.web.referencedata.provider.RepositoryReadOnlyMessageProvider">
              <property name="modelName" value="message" />
              <property name="repository" ref="repository" />
              <property name="messageKey" value="repository.readOnlyMode" />
            </bean>
          </property>
        </bean>
      </list>
    </property>
    <property name="services">
      <list>
        <ref bean="collectionRedirectService" />
        <ref bean="authenticateService" />
        <ref bean="logoutService" />
        <ref bean="httpOptionsService" />

        <!-- These are located in their own files: -->
        <!--ref bean="editService" /-->               <!-- 400 -->
        <!--ref bean="manageService" /-->             <!-- 500 -->
        <!--ref bean="browseService" /-->             <!-- 600 -->
        <ref bean="viewService"/>                     <!-- 700 -->
        <!--         <ref bean="searchService" /> -->
      </list>
    </property>
    <property name="authenticationChallenge">
      <ref bean="${webAuthenticationChallenge}" />
    </property>
  </bean>

  <!--
  <bean name="webAuthenticationChallenge"
        parent="httpDigestAuthenticationHandler" />
  -->

  <!-- Collection redirect service -->

  <bean id="collectionRedirectService" class="org.vortikal.web.service.ServiceImpl">
    <property name="order" value="0" />
    <property name="assertions">
      <list>
        <ref local="resourceIsCollection" />
        <ref local="uriDoesNotEndWithSlash" />
      </list>
    </property>
    <property name="handler" ref="redirectHandler" />
  </bean>





  <!-- WEB assertions -->


  <bean id="webHostNameAssertion" class="org.vortikal.web.service.RequestHostNameAssertion">
    <property name="hostName" value="${webHostName}" />
  </bean>

  <!-- Logout service -->
  
  <bean id="logoutService" class="org.vortikal.web.service.ServiceImpl">
    <property name="order" value="200" />
    <property name="assertions">
      <list>
        <ref bean="logoutIsSupported" />
        <ref bean="vrtxParameterEqualsLogout" />
      </list>
    </property>
    <property name="handler" ref="logoutHandler" />
  </bean>


  <bean id="authenticateService" class="org.vortikal.web.service.ServiceImpl">
    <property name="order" value="100" />

    <property name="authenticationChallenge" 
              ref="httpDigestAuthenticationChallenge" />
    <property name="assertions">
      <list>
        <bean class="org.vortikal.web.service.RequestParameterExistsAssertion">
          <property name="parameterName" value="authenticate" />
        </bean>
        <bean class="org.vortikal.web.service.IsAuthenticatedAssertion">
          <property name="invert" value="true" />
          <property name="requiresAuthentication" value="true" />
        </bean>
      </list>
    </property>
  </bean>
  



  <bean id="httpOptionsService" class="org.vortikal.web.service.ServiceImpl">
    <property name="order" value="300" />
    <property name="assertions">
      <list>
        <bean class="org.vortikal.web.service.RequestMethodAssertion">
          <property name="methods">
            <set>
              <value>OPTIONS</value>
            </set>
          </property>       
        </bean>
      </list>
    </property>
    <property name="handler">
      <ref bean="httpOptionsHandler" />
    </property>
  </bean>


  <!-- View services -->
  
  <bean id="viewService" class="org.vortikal.web.service.ServiceImpl">
    <property name="order" value="700" />
    <property name="assertions">
      <list>
        <bean class="org.vortikal.web.service.RequestMethodAssertion">
          <property name="methods">
            <set>
              <value>GET</value>
              <value>HEAD</value>
              <value>POST</value>
            </set>
          </property>       
        </bean>
      </list>
    </property>
    <property name="services">
      <list>
        <ref bean="collectionListingService" />
        <ref bean="displayResourceService" />
      </list>
    </property>
  </bean>


  <bean id="collectionListingService" class="org.vortikal.web.service.ServiceImpl">
    <property name="assertions">
      <list>
        <ref bean="resourceIsCollectionAssertion" />
      </list>
    </property>
    <property name="handler" ref="collectionListingHandler" />
    <property name="services">
      <list>
        <ref bean="displayIndexFileService" />
      </list>    
    </property>
  </bean>

  <bean id="collectionListingAsFeedService" class="org.vortikal.web.service.ServiceImpl">
    <property name="parent" ref="collectionListingService" />
    <property name="assertions">
      <list>
        <ref bean="feedParameterSetAssertion" />
        </list>
    </property>
    <property name="handler" ref="collectionListingAsFeedHandler" />
  </bean>



  <bean id="displayIndexFileService" class="org.vortikal.web.service.ServiceImpl">
    <property name="assertions">
      <list>
        <ref bean="hasIndexFileAssertion" />
      </list>
    </property>
    <property name="handler" ref="displayIndexFileHandler" />
  </bean>

  <bean id="hasIndexFileAssertion" class="org.vortikal.web.service.ResourceChildAssertion">
    <property name="childNames" ref="indexFileList"/>
  </bean>

  <bean id="indexFileList" class="org.vortikal.context.CSVListFactoryBean">
    <property name="csvList"
              value="index.xml,index.html,index-eng.xml,index-eng.html,index.htm,index-eng.htm" />
  </bean>


  <bean id="displayResourceService" class="org.vortikal.web.service.ServiceImpl">
    <property name="handler" ref="displayResourceHandler" />
    <property name="services">
      <list>
        <ref bean="displayHTMLResourceService" />
      </list>    
    </property>
  </bean>


  <bean id="displayHTMLResourceService" class="org.vortikal.web.service.ServiceImpl">
    <description>
      Specific service for displaying HTML resources. It is unwise to
      use the plain 'displayResource' service here, as a number of
      content wrappers are applied to the response, and this should
      not be done on e.g. PDF resources, etc.
    </description>
    <property name="assertions">
      <list>
        <ref bean="contentTypeMatchesHtml" />
      </list>
    </property>
    <property name="handler" ref="displayHTMLResourceHandler" />
  </bean>


  


  <!-- **************** -->
  <!-- ASSERTIONS       -->
  <!-- **************** -->

  <!-- Parent assertions -->

  <bean id="vrtxParameterEquals" 
        class="org.vortikal.web.service.RequestParameterAssertion" abstract="true">
    <property name="parameterName" value="vrtx" />
  </bean>

  <!-- Logout -->

  <bean id="vrtxParameterEqualsLogout" 
        parent="vrtxParameterEquals">
    <property name="parameterValue" value="logout" />
  </bean>

  <bean id="logoutIsSupported"
        class="org.vortikal.web.service.LogoutSupportedAssertion">
    <property name="tokenManager" ref="tokenManager" />
  </bean>

  <!-- Collection redirect -->

  <bean id="resourceIsCollection"
        class="org.vortikal.web.service.ResourceIsCollectionAssertion" />

  <bean id="uriDoesNotEndWithSlash"
        class="org.vortikal.web.service.RequestURIRegexpAssertion">
    <property name="pattern" value=".*[^/]$" />
  </bean>   


  <bean id="rssParameterSetAssertion" 
        class="org.vortikal.web.service.RequestParameterAssertion">
    <property name="parameterName" value="vrtx" />
    <property name="parameterValue" value="rss" />
  </bean>

  <bean id="feedParameterSetAssertion" 
    class="org.vortikal.web.service.RequestParameterAssertion">
    <property name="parameterName" value="vrtx" />
    <property name="parameterValue" value="feed" />
  </bean>

  <bean id="abstractResourcePrincipalPermissionAssertion" 
        class="org.vortikal.web.service.ResourcePrincipalPermissionAssertion"
        abstract="true">
    <property name="principalManager" ref="principalManager" />
    <property name="roleManager" ref="roleManager" />
    <property name="authorizationManager" ref="authorizationManager" />
    <property name="repository" ref="repository" />
    <property name="trustedToken" ref="trustedToken" />
  </bean>

  <bean id="webProtocolAssertion"
        class="org.vortikal.web.service.RequestProtocolAssertion">
    <property name="protocol" value="${webProtocol}" />
  </bean>

  <bean id="webPortAssertion"
        class="org.vortikal.web.service.RequestPortAssertion">
    <property name="port" value="${webPort}" />
  </bean>



  <bean id="resourceIsCollectionAssertion" 
        class="org.vortikal.web.service.ResourceIsCollectionAssertion" />

  <bean id="requestLocaleNotNorwegianNB"
        class="org.vortikal.web.service.RequestLocaleMatchAssertion">
    <property name="invert" value="true" />
    <property name="locale">
      <bean class="java.util.Locale">
        <constructor-arg><value>no</value></constructor-arg>
      </bean>
    </property>
    <property name="localeResolver" ref="localeResolver" />
  </bean>
  
  <bean id="requestLocaleNotNorwegianNN"
        class="org.vortikal.web.service.RequestLocaleMatchAssertion">
    <property name="invert" value="true" />
    <property name="locale">
      <bean class="java.util.Locale">
        <constructor-arg><value>nn</value></constructor-arg>
      </bean>
    </property>
    <property name="localeResolver" ref="localeResolver" />
  </bean>
  
  <bean id="requestLocaleNotEnglish"
        class="org.vortikal.web.service.RequestLocaleMatchAssertion">
    <property name="invert" value="true" />
    <property name="locale">
      <bean class="java.util.Locale">
        <constructor-arg><value>en</value></constructor-arg>
      </bean>
    </property>
    <property name="localeResolver" ref="localeResolver" />
  </bean>
  

</beans>
