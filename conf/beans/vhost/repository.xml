<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans.dtd">

<beans>
  
  <!-- Repository -->

  <bean id="repository" class="org.vortikal.repositoryimpl.RepositoryImpl">
    <property name="id" value="${repositoryID}" />
    <property name="aclValidator" ref="aclValidator"/>
    <property name="tokenManager" ref="tokenManager" />
    <property name="roleManager" ref="roleManager" />
    <property name="permissionsManager" ref="permissionsManager" />
    <property name="dao" ref="repository.backend" />
    <property name="resourceManager" ref="resourceManager" />
    <property name="readOnly" value="${repositoryReadOnly}" />
  </bean>

  
  <bean id="repository.backend" class="org.vortikal.repositoryimpl.dao.Cache">
    <property name="maxItems"><value>${resourceCacheSize}</value></property>
    <property name="wrappedAccessor">
      <ref local="repository.database" />
    </property>
  </bean>

  <bean id="repository.database" class="org.vortikal.repositoryimpl.dao.JDBCClient">
    <property name="databaseDriver" value="${databaseDriver}" />
    <property name="maxDatabaseConnections" value="${maxDatabaseConnections}" />
    <property name="databaseURL" value="${databaseURL}" />
    <property name="databaseUser" value="${jdbcUsername}" />
    <property name="databasePassword" value="${jdbcPassword}" />

    <property name="contentStore" ref="repository.contentStore" />
    <property name="propertyManager" ref="propertyManager" />
    <property name="principalManager" ref="principalManager" />
  </bean>

  <bean id="repository.contentStore" 
        class="org.vortikal.repositoryimpl.dao.SimpleFileSystemContentStore">
    <property name="urlEncodeFileNames" value="${urlEncodeFileNames}" />
    <property name="repositoryDataDirectory" value="${repositoryDataDirectory}" />
  </bean>

  <bean id="repository.requestLocal" class="org.vortikal.web.RequestLocalRepository">
    <property name="repository" ref="repository"/>
  </bean>

  <bean id="resourceManager" class="org.vortikal.repositoryimpl.ResourceManager">
    <property name="principalManager" ref="principalManager" />
    <property name="roleManager" ref="roleManager" />
    <property name="permissionsManager" ref="permissionsManager" />
    <property name="dao" ref="repository.backend" />
    <property name="propertyManager" ref="propertyManager" />
  </bean>

  <bean id="propertyManager" class="org.vortikal.repositoryimpl.PropertyManagerImpl">
    <property name="principalManager" ref="principalManager" />
    <property name="roleManager" ref="roleManager" />
    <property name="permissionsManager" ref="permissionsManager" />
    <property name="rootResourceTypeDefinition" ref="rootResourceTypeDefinition"/>
  </bean>

  <bean id="permissionsManager" class="org.vortikal.repositoryimpl.PermissionsManager">
    <property name="principalManager" ref="principalManager" />
    <property name="roleManager" ref="roleManager" />
  </bean>

  <bean id="aclValidator" class="org.vortikal.repositoryimpl.ACLValidator">
    <property name="principalManager" ref="principalManager" />
  </bean>

  <!-- Quartz scheduled jobs -->

  <bean id="repository.schedulerFactory"
        class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
    <property name="triggers">
      <list>
        <ref local="repository.unlockSimpleTrigger"/>
      </list>
    </property>
  </bean>


  <bean id="repository.unlockSimpleTrigger"
        class="org.springframework.scheduling.quartz.SimpleTriggerBean">
    <property name="jobDetail">
      <!-- see the example of method invoking job above -->    
      <ref bean="repository.cleanupLocksJobDetail"/>
    </property>
    <property name="startDelay">
      <!-- 60 seconds -->
      <value>60000</value>
    </property>
    <property name="repeatInterval">
      <!-- repeat every 600 seconds -->
      <value>600000</value>
    </property>
  </bean>

  <bean id="repository.cleanupLocksJobDetail" 
        class="org.vortikal.scheduling.quartz.VortikalMethodInvokingJobDetailFactoryBean">
    <property name="group" value="repository" />
    <property name="targetObject"><ref bean="repository.database"/></property>
    <property name="targetMethod"><value>deleteExpiredLocks</value></property>
  </bean>



</beans>
