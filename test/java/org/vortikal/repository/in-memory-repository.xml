<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans.dtd">

<beans>

  <!-- In-memory repository -->

   <bean id="propertyConfigurer"
         class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
     <property name="ignoreResourceNotFound" value="true" />
     <property name="locations">
       <list>
         <value>classpath:/vortikal/beans/vortikal.properties</value>
         <value>classpath:/org/vortikal/repository/in-memory-repository.properties</value>
       </list>
     </property>
   </bean>


  <!-- Overrides repository.contentStore -->

  <bean id="repository.contentStore" 
        class="org.vortikal.repositoryimpl.dao.MemoryContentStore">
  </bean>


  <bean id="repository.dbInitInterpreter" class="org.vortikal.shell.BeanShellConsole">
    <property name="runEvalLoop" value="false" />
  </bean>


  <bean id="repository.datbaseInitializer"
        class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
    <property name="targetObject" ref="repository.dbInitInterpreter" />
    <property name="targetMethod" value="evalInputStream" />
    <property name="arguments">
      <list>
        <ref bean="repository.dbInitProgram" />
      </list>
    </property>
  </bean>


 <bean id="repository.dbInitProgram" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
   <property name="targetClass" value="org.vortikal.util.io.StreamUtil" />
   <property name="targetMethod" value="stringToStream" />
   <property name="arguments">
     <list>
       <value>
          import java.io.*;

          sql = new String(org.vortikal.util.io.StreamUtil.readInputStream(
                this.getClass().getResourceAsStream("/vortikal/sql/${sqlDialect}-schema.sql")));

          conn = context.getBean("repository.dataSource").getConnection();
          stmt = conn.prepareStatement(sql);
          stmt.executeUpdate();
          stmt.close();
          conn.commit();
          conn.close();
       </value>
     </list>
   </property>
 </bean>


</beans>
